[{"D:\\DKHP_demo\\dkhp_frontend\\src\\index.js":"1","D:\\DKHP_demo\\dkhp_frontend\\src\\App.js":"2","D:\\DKHP_demo\\dkhp_frontend\\src\\Router\\ClientRouter.js":"3","D:\\DKHP_demo\\dkhp_frontend\\src\\Router\\AdminRouter.js":"4","D:\\DKHP_demo\\dkhp_frontend\\src\\Router\\ProtectedRouter.js":"5","D:\\DKHP_demo\\dkhp_frontend\\src\\Page\\Login.js":"6","D:\\DKHP_demo\\dkhp_frontend\\src\\Page\\DashboardPage.js":"7","D:\\DKHP_demo\\dkhp_frontend\\src\\Page\\OpenedCoursesPage.js":"8","D:\\DKHP_demo\\dkhp_frontend\\src\\Page\\TimeTablePage.js":"9","D:\\DKHP_demo\\dkhp_frontend\\src\\Page\\ErrorPage.js":"10","D:\\DKHP_demo\\dkhp_frontend\\src\\Page\\RegisteredCoursesPage.js":"11","D:\\DKHP_demo\\dkhp_frontend\\src\\Component\\Navbar.js":"12","D:\\DKHP_demo\\dkhp_frontend\\src\\AdminPage\\OpeningRegPeriod.js":"13","D:\\DKHP_demo\\dkhp_frontend\\src\\AdminPage\\SubjectPage.js":"14","D:\\DKHP_demo\\dkhp_frontend\\src\\AdminPage\\SemesterPage.js":"15","D:\\DKHP_demo\\dkhp_frontend\\src\\AdminPage\\CoursePage.js":"16","D:\\DKHP_demo\\dkhp_frontend\\src\\AdminPage\\WelcomePage.js":"17","D:\\DKHP_demo\\dkhp_frontend\\src\\AdminPage\\StudentPage.js":"18","D:\\DKHP_demo\\dkhp_frontend\\src\\API\\CourseAPI.js":"19","D:\\DKHP_demo\\dkhp_frontend\\src\\Util\\Constraint.js":"20","D:\\DKHP_demo\\dkhp_frontend\\src\\AdminComponent\\AdminNavbar.js":"21","D:\\DKHP_demo\\dkhp_frontend\\src\\Util\\AxiosService.js":"22","D:\\DKHP_demo\\dkhp_frontend\\src\\Util\\FormatDateTime.js":"23","D:\\DKHP_demo\\dkhp_frontend\\src\\Component\\CourseTable.js":"24","D:\\DKHP_demo\\dkhp_frontend\\src\\Component\\Modal.js":"25","D:\\DKHP_demo\\dkhp_frontend\\src\\API\\StudentAPI.js":"26","D:\\DKHP_demo\\dkhp_frontend\\src\\API\\AminAPI.js":"27","D:\\DKHP_demo\\dkhp_frontend\\src\\AdminComponent\\StudentForm.js":"28","D:\\DKHP_demo\\dkhp_frontend\\src\\AdminComponent\\ModalAndAlert.js":"29","D:\\DKHP_demo\\dkhp_frontend\\src\\Component\\TableHeader.js":"30","D:\\DKHP_demo\\dkhp_frontend\\src\\API\\SubjectAPI.js":"31","D:\\DKHP_demo\\dkhp_frontend\\src\\AdminComponent\\SubjectForm.js":"32","D:\\DKHP_demo\\dkhp_frontend\\src\\AdminComponent\\CourseForm.js":"33","D:\\DKHP_demo\\dkhp_frontend\\src\\AdminComponent\\RegPeriodForm.js":"34","D:\\DKHP_demo\\dkhp_frontend\\src\\AdminComponent\\SemesterForm.js":"35"},{"size":258,"mtime":1703172217022,"results":"36","hashOfConfig":"37"},{"size":869,"mtime":1710823300257,"results":"38","hashOfConfig":"37"},{"size":2688,"mtime":1710688394854,"results":"39","hashOfConfig":"37"},{"size":2331,"mtime":1700886360261,"results":"40","hashOfConfig":"37"},{"size":625,"mtime":1703294269577,"results":"41","hashOfConfig":"37"},{"size":5363,"mtime":1703175874381,"results":"42","hashOfConfig":"37"},{"size":1221,"mtime":1700284465040,"results":"43","hashOfConfig":"37"},{"size":2775,"mtime":1715872454912,"results":"44","hashOfConfig":"37"},{"size":4996,"mtime":1718194746638,"results":"45","hashOfConfig":"37"},{"size":608,"mtime":1700322015477,"results":"46","hashOfConfig":"37"},{"size":3655,"mtime":1715876232558,"results":"47","hashOfConfig":"37"},{"size":2509,"mtime":1700453433747,"results":"48","hashOfConfig":"37"},{"size":6283,"mtime":1711169790403,"results":"49","hashOfConfig":"37"},{"size":7323,"mtime":1700916109957,"results":"50","hashOfConfig":"37"},{"size":4783,"mtime":1714988026921,"results":"51","hashOfConfig":"37"},{"size":6537,"mtime":1700916015595,"results":"52","hashOfConfig":"37"},{"size":678,"mtime":1700555230875,"results":"53","hashOfConfig":"37"},{"size":6414,"mtime":1700916088050,"results":"54","hashOfConfig":"37"},{"size":1493,"mtime":1710691940805,"results":"55","hashOfConfig":"37"},{"size":51,"mtime":1711157471556,"results":"56","hashOfConfig":"37"},{"size":1611,"mtime":1700886703278,"results":"57","hashOfConfig":"37"},{"size":1225,"mtime":1700876889131,"results":"58","hashOfConfig":"37"},{"size":611,"mtime":1700883669997,"results":"59","hashOfConfig":"37"},{"size":2310,"mtime":1715872621369,"results":"60","hashOfConfig":"37"},{"size":4128,"mtime":1715876555823,"results":"61","hashOfConfig":"37"},{"size":1130,"mtime":1700403093100,"results":"62","hashOfConfig":"37"},{"size":1498,"mtime":1700884759919,"results":"63","hashOfConfig":"37"},{"size":3248,"mtime":1700835142782,"results":"64","hashOfConfig":"37"},{"size":1187,"mtime":1700915952591,"results":"65","hashOfConfig":"37"},{"size":471,"mtime":1700838296689,"results":"66","hashOfConfig":"37"},{"size":540,"mtime":1700561343740,"results":"67","hashOfConfig":"37"},{"size":2937,"mtime":1700554883360,"results":"68","hashOfConfig":"37"},{"size":6257,"mtime":1700845061623,"results":"69","hashOfConfig":"37"},{"size":3412,"mtime":1714988503265,"results":"70","hashOfConfig":"37"},{"size":1127,"mtime":1700886037342,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gjw31j",{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\DKHP_demo\\dkhp_frontend\\src\\index.js",[],[],"D:\\DKHP_demo\\dkhp_frontend\\src\\App.js",["197"],[],"import './App.css';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport ClientRouter from './Router/ClientRouter';\nimport AdminRouter from './Router/AdminRouter';\nimport { SnackbarProvider } from 'notistack';\nimport Login from './Page/Login';\nimport ProtectedRouter from './Router/ProtectedRouter';\nimport { API_ENDPOINT } from './Util/Constraint.js';\nfunction App() {\n    return (\n      <BrowserRouter>\n      <SnackbarProvider maxSnack={3}>\n          <Routes>\n            <Route path=\"/login\" element={<Login/>}/>\n            <Route path=\"/admin/*\" element={<ProtectedRouter requiredRole=\"ADMIN\"><AdminRouter /></ProtectedRouter>}/>\n            <Route path=\"/*\" element={<ProtectedRouter requiredRole=\"STUDENT\"><ClientRouter /></ProtectedRouter>}/>\n        </Routes>\n          </SnackbarProvider>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","D:\\DKHP_demo\\dkhp_frontend\\src\\Router\\ClientRouter.js",["198","199","200","201","202"],[],"import { Route, Routes, useLocation, useNavigate } from \"react-router-dom\";\r\nimport OpenedCoursesPage from \"../Page/OpenedCoursesPage\";\r\nimport ErrorPage from \"../Page/ErrorPage\";\r\nimport NavBar from \"../Component/Navbar\";\r\nimport RegisteredCoursesPage from \"../Page/RegisteredCoursesPage\";\r\nimport DashboardPage from \"../Page/DashboardPage\";\r\nimport { createContext, useEffect, useState } from \"react\";\r\nimport { getOpenedCourses, getUpdatedRegNumbers } from \"../API/CourseAPI\";\r\nimport TimeTablePage from \"../Page/TimeTablePage\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nexport const ClientContext= createContext();\r\nfunction ClientRouter(){\r\n     const { enqueueSnackbar } = useSnackbar();\r\n     const navigate = useNavigate();\r\n     const [courseData, setCourseData]=useState([]);\r\n     const [regNumbers, setRegNumbers]=useState(new Map());\r\n     const[error, setError]=useState(null);\r\n     let anchorOrigin = { horizontal: 'center' , vertical: 'bottom'}\r\n     useEffect(()=>{\r\n          const updatedRegNumbers=new Map();\r\n          for(let c of courseData) updatedRegNumbers.set(c.id+\"\", c.registeredNumber);\r\n          setRegNumbers(updatedRegNumbers);\r\n     }, [courseData])\r\n     async function loadCourseData(){\r\n          getOpenedCourses().then(res=>{\r\n               setCourseData(res.data);\r\n               setError(null);\r\n          })\r\n          .catch(err=>setError(err))\r\n     }\r\n     function logOut(){\r\n          localStorage.removeItem(\"Authorization\");\r\n          localStorage.removeItem(\"Role\");\r\n          navigate(\"/login\");\r\n     }\r\n     useEffect(()=>{\r\n          let sseClient=getUpdatedRegNumbers(setRegNumbers);\r\n          return ()=>sseClient.close();\r\n     },[])\r\n     useEffect(()=>{\r\n          if(error!=null){\r\n               if(error.response.status==401) logOut();\r\n               let config = {variant: 'error',anchorOrigin:anchorOrigin}\r\n               enqueueSnackbar(error.response.data,config);\r\n          }\r\n     },[error])\r\n     useEffect(()=>{\r\n          if(courseData.length==0) loadCourseData();\r\n     },[])\r\nreturn(\r\n<ClientContext.Provider value={{courseData,regNumbers, setError}}>\r\n          <NavBar/>\r\n          <Routes>\r\n                    <Route exact path=\"/\" element={<DashboardPage />}/>\r\n                    <Route path=\"/OpenedCourses\" element={<OpenedCoursesPage/>}/>\r\n                    <Route path=\"/RegisteredCourses\" element={<RegisteredCoursesPage/>}/>\r\n                    <Route path=\"/TimeTable\" element={<TimeTablePage/>}/>\r\n                    <Route path=\"/*\" element={<ErrorPage message=\"404 Error! Page Not Found\"/>}/>\r\n          </Routes>\r\n     </ClientContext.Provider>\r\n)\r\n}\r\nexport default ClientRouter;","D:\\DKHP_demo\\dkhp_frontend\\src\\Router\\AdminRouter.js",["203","204"],[],"import { Route, Routes, useNavigate } from \"react-router-dom\";\r\nimport ErrorPage from \"../Page/ErrorPage\"\r\nimport { createContext, useEffect, useState } from \"react\";\r\nimport CoursePage from \"../AdminPage/CoursePage\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport SubjectPage from \"../AdminPage/SubjectPage\";\r\nimport AdminNavBar from \"../AdminComponent/AdminNavbar\";\r\nimport StudentPage from \"../AdminPage/StudentPage\";\r\nimport WelcomePage from \"../AdminPage/WelcomePage\";\r\nimport OpeningRegPeriod from \"../AdminPage/OpeningRegPeriod\";\r\nimport SemesterPage from \"../AdminPage/SemesterPage\";\r\n\r\nexport const AdminContext= createContext();\r\nfunction AdminRouter(){\r\n          const { enqueueSnackbar } = useSnackbar();\r\n          const[error, setError]=useState(null);\r\n          const navigate = useNavigate();\r\n          let anchorOrigin = { horizontal: 'center' , vertical: 'bottom'}\r\n          const logOut=()=>{\r\n               localStorage.removeItem(\"Authorization\");\r\n               localStorage.removeItem(\"Role\")\r\n               navigate(\"/login\");\r\n          }\r\n          useEffect(()=>{\r\n               if(error!=null&&error.response){\r\n                    if(error.response.status==401) logOut();\r\n                    let config = {variant: 'danger',anchorOrigin:anchorOrigin}\r\n                    enqueueSnackbar(error.response.data,config);\r\n               }\r\n          },[error])\r\n          return(\r\n                    <AdminContext.Provider value={{setError}}>\r\n                         <AdminNavBar/>\r\n                         <Routes>\r\n                                   <Route exact path=\"/\" element={<WelcomePage/>}/>\r\n                                   <Route path=\"/CoursePage\" element={<CoursePage/>}/>\r\n                                   <Route path=\"/SubjectPage\" element={<SubjectPage/>}/>\r\n                                   <Route path=\"/StudentPage\" element={<StudentPage/>}/>\r\n                                   <Route path=\"/OpeningRegPeriod\" element={<OpeningRegPeriod/>}/>\r\n                                   <Route path=\"/SemesterPage\" element={<SemesterPage/>}/>\r\n                                   <Route path=\"/*\" element={<ErrorPage message=\"404 Not Found!\"/>}/>\r\n                         </Routes>\r\n                    </AdminContext.Provider>\r\n          )\r\n}\r\nexport default AdminRouter;","D:\\DKHP_demo\\dkhp_frontend\\src\\Router\\ProtectedRouter.js",[],[],"D:\\DKHP_demo\\dkhp_frontend\\src\\Page\\Login.js",["205","206","207","208","209","210","211"],[],"import { API_ENDPOINT } from \"../Util/Constraint\"\r\nimport { useState } from \"react\"\r\nimport { useSnackbar } from \"notistack\"\r\nimport { Link, useNavigate } from \"react-router-dom\"\r\nimport AxiosService from \"../Util/AxiosService\"\r\nimport UitIcon from \"../Resourses/uit icon.png\"\r\n\r\nconst Login=()=>{\r\n          const navigate = useNavigate();\r\n          const [form, setForm] = useState({\r\n                    username: '',\r\n                    password: ''\r\n                })\r\n          const { enqueueSnackbar } = useSnackbar();\r\n          const [error,setError]=useState({ txtUsername: false, txtPassword: false });\r\n          const onSubmit=()=>{\r\n                    let validate = validateData(form)\r\n                    let config = null;\r\n                    let anchorOrigin = { horizontal: 'center' , vertical: 'bottom'}\r\n                    if(validate){\r\n                        const formData=new FormData();\r\n                        formData.append('username', form.username)\r\n                        formData.append('password', form.password)\r\n                        AxiosService.post(API_ENDPOINT+'/api/auth/login',formData).then(res=>{\r\n                            localStorage.setItem('Authorization', res.data.token);\r\n                            localStorage.setItem('Role', res.data.role);\r\n                            config = {variant: 'success',anchorOrigin:anchorOrigin}\r\n                            enqueueSnackbar('Đăng nhập thành công', config);\r\n                            let url=\"/\";\r\n                            if(res.data.role==\"ADMIN\") url=\"/admin/\";\r\n                            navigate(url);\r\n                        })\r\n                        .catch((error)=>{\r\n                            config = {variant: 'error',anchorOrigin:anchorOrigin}\r\n                            let errors = error.response;\r\n                            if(errors==null) enqueueSnackbar('Unknown error', config);\r\n                            else if (errors.status == 401) {\r\n                                enqueueSnackbar('Tên tài khoản hoặc mật khẩu không chính xác', config);\r\n                            }\r\n                            else if(errors.status==400) enqueueSnackbar(errors.data, config);\r\n                        })\r\n                }\r\n          }\r\n          const handleChangeValue = (e) => {\r\n                    let name = e.target.name;\r\n                    let value = e.target.value;\r\n                    if (name == 'username') {\r\n                        setForm({ ...form, username: value })\r\n                    }\r\n                    if (name == 'password') {\r\n                        setForm({ ...form, password: value })\r\n                    }\r\n                }\r\n          const validateData = (data) => {\r\n                    let isValid = true;\r\n                    let txtUsername, txtPassword;\r\n                    if (data.username.trim().length == 0) {\r\n                        txtUsername = true;\r\n                        isValid = false;\r\n                    } else {\r\n                        txtUsername = false;\r\n                    }\r\n                    if (data.password.trim().length == 0) {\r\n                        isValid = false;\r\n                        txtPassword = true;\r\n                    } else {\r\n                        txtPassword = false;\r\n                    }\r\n                    setError({ ...error, txtUsername: txtUsername, txtPassword: txtPassword })\r\n                    return isValid;\r\n          }\r\n          return(\r\n            <div className=\"OuterForm  py-4 bg-body-tertiary\">\r\n                <div className=\"form-signin w-100 m-auto text-center align-items-center\">\r\n                        <img className=\"mb-4\" src={UitIcon} alt=\"\" width=\"72\" height=\"57\"/>\r\n                        <h1 className=\"h3 mb-3 fw-normal\">Please sign in</h1>\r\n                    <div className=\"form-floating\">\r\n                        <input type=\"text\" className=\"form-control\" id=\"exampleInputUsername\" placeholder=\"Username\" name=\"username\" onChange={(e)=>handleChangeValue(e)}/> \r\n                        <label htmlFor=\"exampleInputUsername\">Nhập MSSV hoặc email</label>\r\n                    </div>\r\n                        <div style={error.txtUsername ? { display: ''} : { display: 'none' }} className=\"error\">\r\n                                    Tên tài khoản không được để trống\r\n                                </div>\r\n                    <div className=\"form-floating\">\r\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" name=\"password\" onChange={(e)=>handleChangeValue(e)}/> \r\n                        <label htmlFor=\"exampleInputPassword1\">Nhập mật khẩu</label>\r\n                    </div>\r\n                    <div style={error.txtPassword ? { display: ''} : { display: 'none' }} className=\"error\">\r\n                                Mật khẩu không được để trống\r\n                        </div>\r\n                    <button className=\"btn btn-primary w-100 py-2\" onClick={()=>onSubmit()}>Đăng Nhập</button>\r\n                    <Link to=\"#\">Forgot password or username</Link><br/>\r\n                    <p className=\"mt-2 mb-3 text-body-secondary\">&copy; 2023–2050</p>\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\nexport default Login;","D:\\DKHP_demo\\dkhp_frontend\\src\\Page\\DashboardPage.js",["212"],[],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst DashboardPage = () =>(\r\n    <div\r\n        style={{\r\n           display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"15px\"\r\n        }}\r\n    >\r\n        <h3 style={{ marginBottom: \"20px\" }}>TRANG ĐĂNG KÝ HỌC PHẦN</h3>\r\n        <div className=\"border border-dark rounded\" style={{padding:\"10px\"}}>\r\n                <h5>SINH VIÊN THOÁT RA ĐĂNG NHẬP LẠI NẾU BỊ LỖI KHÔNG TẢI ĐƯỢC DANH SÁCH</h5>\r\n                <h5>HƯỚNG DẪN ĐĂNG KÝ HỌC PHẦN</h5>\r\n                <ol>\r\n                        <li>Nhấn vào trình đơn Đăng ký Học phần</li>\r\n                        <li>Chọn các lớp cần đăng ký</li>\r\n                        <li>Nhấn vào nút Đăng ký</li>\r\n                        <li>Chờ hệ thống xử lỳ và hoàn thành xử lý</li>\r\n                        <li>Sau khi có kết quả xử lý, sinh viên kiểm tra và thực hiện chọn đăng ký tiếp, quay lại bước 1</li>\r\n                </ol>\r\n        </div>\r\n    </div>\r\n);\r\nexport default DashboardPage;","D:\\DKHP_demo\\dkhp_frontend\\src\\Page\\OpenedCoursesPage.js",["213","214","215"],[],"import React, { useState, useEffect, useRef, useContext, useMemo } from \"react\";\r\nimport CourseTable from \"../Component/CourseTable\";\r\nimport { enrollCourses } from \"../API/StudentAPI\";\r\nimport { ClientContext} from \"../Router/ClientRouter\";\r\nimport { OpenedCourses_ResultModal } from \"../Component/Modal\";\r\nconst OpenedCoursesPage=()=>{\r\n          const {courseData,setError}=useContext(ClientContext);\r\n          const[modal, setModal]=useState({show:false, data:[]});\r\n          const [checkedIds, setCheckedIds]=useState(new Set());\r\n          const [isDKButtonDisabled, setIsDKButtonDisabled]=useState(true);\r\n          const [searchTerm, setSearchTerm]=useState(\"\");\r\n          const [search, setSearch]=useState(\"\");\r\n          function handleDKButton(e){\r\n                e.preventDefault();\r\n                enrollCourses([...checkedIds]).then(res=>{\r\n                        setModal({show:true, data:new Map(Object.entries(res.data))});\r\n                        setCheckedIds(new Set())\r\n                })\r\n                .catch(err=>setError(err))\r\n            }\r\n            const handleClose=()=>{\r\n                  setModal({show:false, data:[]});\r\n            }\r\n          useEffect(()=>{\r\n                if(checkedIds.size===0) setIsDKButtonDisabled(true);\r\n                else setIsDKButtonDisabled(false);\r\n          },[checkedIds])\r\n          const handleFilter = (item) => {\r\n                const re = new RegExp(\"^\"+search,\"i\");\r\n                return item.courseId.match(re);\r\n        }\r\n          let filterCourses=(search===\"\")?courseData:courseData.filter(handleFilter);\r\n         return(\r\n          <>\r\n          <div className=\"main-page\">\r\n                    <div className=\"ContentAlignment\">\r\n                              <h4>Danh sách lớp mở chờ đăng kí</h4>\r\n                              <button type=\"button\" className=\"btn btn-primary\" onClick={(e)=>handleDKButton(e)} disabled={isDKButtonDisabled}>Đăng kí</button>\r\n                              <form className=\"d-flex col-lg-6\" role=\"search\" onSubmit={(e)=>{e.preventDefault(); setSearch(searchTerm);}}>\r\n                                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Tìm kiếm theo mã lớp\" id=\"Search\" onChange={(e)=>setSearchTerm(e.target.value)}/>\r\n                                        <button className=\"btn btn-outline-success\" type=\"submit\" >Search</button>\r\n                              </form>\r\n                    </div>\r\n                    <CourseTable filterCourses={filterCourses} checkedIds={checkedIds} setCheckedIds={setCheckedIds}/>\r\n          </div>\r\n           <OpenedCourses_ResultModal modal={modal} handleClose={handleClose}/>\r\n          </>\r\n         );\r\n}\r\nexport default OpenedCoursesPage;","D:\\DKHP_demo\\dkhp_frontend\\src\\Page\\TimeTablePage.js",["216","217"],[],"D:\\DKHP_demo\\dkhp_frontend\\src\\Page\\ErrorPage.js",["218","219"],[],"import React, { useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ErrorPage = ({message}) =>(\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    marginTop: \"20%\",\r\n                }}\r\n            >\r\n                <h2 style={{ marginBottom: \"20px\" }}>{message}</h2>\r\n                <Link to=\"/login\">Go to Login Page</Link>\r\n            </div>\r\n    )\r\n\r\nexport default ErrorPage;","D:\\DKHP_demo\\dkhp_frontend\\src\\Page\\RegisteredCoursesPage.js",["220","221","222","223","224","225","226","227","228"],[],"import { useState, useEffect, useContext } from \"react\";\r\nimport { Alert, Button, Modal } from \"react-bootstrap\";\r\nimport { unenrollCourses } from \"../API/StudentAPI\";\r\nimport { getEnrolledCourses } from \"../API/CourseAPI\";\r\nimport CourseTable from \"../Component/CourseTable\";\r\nimport { ClientContext} from \"../Router/ClientRouter\";\r\nimport { RegisteredCourses_AlertModal, RegisteredCourses_ResultModal } from \"../Component/Modal\";\r\nconst RegisteredCoursesPage=()=>{\r\n          const {courseData, setError}=useContext(ClientContext);\r\n          const [checkedIds, setCheckedIds]=useState(new Set());\r\n          const [regIds, setRegIds]=useState([]);\r\n          const [modal, setModal]=useState({show:0, data:null}); //0:ko show, 1:show alertModal, 2:show resultModal\r\n          const [isDelButtonDisabled, setIsDelButtonDisabled]=useState(true);\r\n          const sendRequest=()=>{\r\n                    unenrollCourses([...checkedIds]).then(res=>{\r\n                              const result=new Map(Object.entries(res.data));\r\n                              const deletedRegIds=new Set();\r\n                              courseData.forEach(c=>{\r\n                                    var info=result.get(c.courseId);\r\n                                   if(info==\"Unenroll successfully\") deletedRegIds.add(c.id);\r\n                              })\r\n                              setRegIds(prevIds=>{\r\n                                    return prevIds.filter(id=>!deletedRegIds.has(id));\r\n                              });\r\n                              setCheckedIds(new Set());\r\n                              setModal({show:2, data:result});\r\n                      })\r\n                      .catch(err=>setError(err))\r\n           }\r\n            const handleClose=()=>{\r\n                  setModal({show:false, data:[]});\r\n            }\r\n            useEffect(()=>{\r\n                        if(checkedIds.size===0) setIsDelButtonDisabled(true);\r\n                        else setIsDelButtonDisabled(false);\r\n            },[checkedIds])\r\n            useEffect(()=>{\r\n                        getEnrolledCourses().then(res=>{\r\n                              setRegIds(res.data);\r\n                        }).catch(err=>setError(err))\r\n                  },[])\r\n                  const filterCourses=courseData.filter(course=>regIds.indexOf(course.id)>-1);\r\n                  const regInfo={numberOfCourses:filterCourses.length,creditNumber:0};\r\n                  for(let course of filterCourses) regInfo.creditNumber+=course.subject.theoryCreditNumber;\r\n        return(\r\n          <>\r\n                    <div className=\"main-page\">\r\n                              <div className=\"ContentAlignment\">\r\n                                        <h4>Đã đăng kí: {regInfo.numberOfCourses} lớp({regInfo.creditNumber} tín chỉ)</h4>\r\n                                        <button type=\"button\" className=\"btn btn-danger\" onClick={()=>setModal({show:1,data:null})} disabled={isDelButtonDisabled}>Hủy đăng kí</button>\r\n                                        \r\n                              </div>\r\n                              <CourseTable filterCourses={filterCourses} checkedIds={checkedIds} setCheckedIds={setCheckedIds}/>\r\n                    </div>\r\n                    {modal.show!=0&&\r\n                          (modal.show==1?<RegisteredCourses_AlertModal modal={modal} courseData={courseData} checkedIds={checkedIds} sendRequest={sendRequest} handleClose={handleClose}/>\r\n                                :<RegisteredCourses_ResultModal modal={modal} handleClose={handleClose}/>)}\r\n          </>\r\n          );\r\n}\r\nexport default RegisteredCoursesPage;","D:\\DKHP_demo\\dkhp_frontend\\src\\Component\\Navbar.js",["229"],[],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { getStudentInfo } from \"../API/StudentAPI\";\r\nimport { ClientContext } from \"../Router/ClientRouter\";\r\nconst NavBar = () => {\r\n    const {setError}=useContext(ClientContext);\r\n    const [studentData, setStudentData]=useState(null);\r\n    useEffect(()=>{\r\n        getStudentInfo().then(res=>{\r\n                setStudentData(res.data)\r\n        })\r\n        .catch((err)=>setError(err))\r\n    },[])\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light h6\">\r\n            <Link className=\"navbar-brand\" to=\"/\">Course Registration App</Link>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item active\">\r\n                        <Link className=\"nav-link\" to=\"/OpenedCourses\">DKHP</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/RegisteredCourses\">Môn Đã ĐK</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/TimeTable\">Thời khóa biểu</Link>\r\n                    </li>\r\n                    {studentData!=null&&(\r\n                        <li className=\"nav-item dropdown\">\r\n                            <Link className=\"nav-link dropdown-toggle\" to=\"/StudentInfo\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"><i className=\"bi bi-person-circle\"/> Sinh Viên</Link>\r\n                                <ul className=\"dropdown-menu\">\r\n                                <li className=\"dropdown-item\">{studentData.user.userId}</li>\r\n                                <li className=\"dropdown-item\">{studentData.user.name}</li>\r\n                                <li className=\"dropdown-item\">{studentData.falcutyName} - {studentData.khoaTuyen}</li>\r\n                                <li className=\"dropdown-item\">Ngành {studentData.program}</li>\r\n                                <li><hr className=\"dropdown-divider\"/></li>\r\n                                <li><Link to=\"/login\" onClick={()=>{localStorage.removeItem(\"Authorization\")}}><i className=\"bi bi-box-arrow-right\"/>  Logout</Link></li>\r\n                                </ul>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","D:\\DKHP_demo\\dkhp_frontend\\src\\AdminPage\\OpeningRegPeriod.js",["230","231","232","233","234"],[],"import { useSnackbar } from \"notistack\";\r\nimport { addRegPeriod, getAllRegperiods, getLatestSemesters, removeRegPeriod, updateRegPeriod } from \"../API/AminAPI\";\r\nimport RegPeriodForm from \"../AdminComponent/RegPeriodForm\";\r\nimport { formatDateTime} from \"../Util/FormatDateTime\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { AdminContext } from \"../Router/AdminRouter\";\r\nimport TableHeader from \"../Component/TableHeader\";\r\nimport { FormModal } from \"../AdminComponent/ModalAndAlert\";\r\nconst initialRegPeriod={\r\n    openTime:\"\",\r\n    closeTime:\"\",\r\n    semester:{\r\n            id:0\r\n    }\r\n}\r\nconst OpeningRegPeriod=()=>{\r\n          const {setError}=useContext(AdminContext);\r\n          const [regPeriodData, setRegPeriodData]=useState([]);\r\n          const[show, setShow]=useState(0); //0: not show, 1: show FormModal\r\n          const [semesters, setSemesters]=useState([]);\r\n          const [flag, setFlag]=useState(true);\r\n          const { enqueueSnackbar } = useSnackbar();\r\n          const config = {variant: '',anchorOrigin:{ horizontal: 'center' , vertical: 'bottom'}}\r\n          const [regPeriodDTO, setRegPeriodDTO]=useState(initialRegPeriod);\r\n          useEffect(()=>{\r\n                getAllRegperiods().then(res=>{\r\n                    setRegPeriodData(res.data)\r\n                })\r\n                .catch(err=>setError(err))\r\n                getLatestSemesters().then(res=>{\r\n                    setSemesters(res.data)\r\n                })\r\n                .catch(err=>setError(err))\r\n          },[])\r\n          const handleError=(err)=>{\r\n                if(err.response.status==400){\r\n                    config.variant=\"error\";\r\n                    enqueueSnackbar(err.response.data, config);\r\n                }\r\n                else setError(err)\r\n          }\r\n          const handleAddButton=(e)=>{\r\n                    e.preventDefault();\r\n                    setFlag(true);\r\n                    setShow(1);\r\n          }\r\n          const handleSubmit=()=>{\r\n                if(flag){\r\n                    addRegPeriod(regPeriodDTO).then(res=>{\r\n                        setRegPeriodData((prevData)=>{\r\n                            const updatedData=[...prevData];\r\n                            updatedData.push(res.data);\r\n                            return updatedData;\r\n                        })\r\n                        setShow(0);\r\n                        config.variant=\"success\"\r\n                        enqueueSnackbar(\"Thêm thành công đợt đăng kí mới\", config)\r\n                    })\r\n                    .catch(err=>handleError(err))\r\n                }\r\n                else{\r\n                        updateRegPeriod(regPeriodDTO).then(res=>{\r\n                            setRegPeriodData((prevData)=>{\r\n                                const updatedData=[...prevData];\r\n                               for(let i=0;i<updatedData.length;i++){\r\n                                    if(updatedData[i].id===res.data.id)\r\n                                        updatedData[i]={...res.data};\r\n                               }\r\n                                return updatedData;\r\n                            })\r\n                            setShow(0);\r\n                            config.variant=\"success\"\r\n                            enqueueSnackbar(\"Update thành công!\", config)\r\n                        })\r\n                        .catch(err=>handleError(err))\r\n                }\r\n          }\r\n          const handleDelButton=(e,id)=>{\r\n                e.preventDefault();\r\n                removeRegPeriod(id).then(res=>{\r\n                    setRegPeriodData(prev=>prev.filter(data=>data.id!=id));\r\n                    config.variant=\"success\";\r\n                    enqueueSnackbar(\"Xóa thành công đợt đăng kí\", config)\r\n                })\r\n                .catch(err=>setError(err))\r\n          }\r\n          const handleModifyButton=(e,id)=>{\r\n                e.preventDefault()\r\n                regPeriodData.forEach((data)=>{\r\n                    if(data.id==id) setRegPeriodDTO(data);\r\n                })\r\n                setFlag(false);\r\n                setShow(1);\r\n          }\r\n          return(\r\n          <>\r\n          <div className=\"main-page\">\r\n                    <div className=\"ContentAlignment\">\r\n                              <h1>Danh sách các đợt đăng kí</h1>\r\n                              <button  type=\"button\" className=\"btn btn-success\" onClick={(e)=>handleAddButton(e)}>Thêm đợt DK</button>\r\n                    </div>\r\n                    <div className=\"TableWapper border-bottom border-dark\">\r\n                        <table className=\"table table-hover\">\r\n                            <TableHeader data={[\"STT\",\"Học kì\",\"Thời gian BD\",\"Thời gian KT\",\"Action\"]} />\r\n                            <tbody>\r\n                        {regPeriodData?.map((data, index)=> {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <th>{index+1}</th>\r\n                                        <td>Kì {data.semester.semesterNum}, năm {data.semester.year}-{data.semester.year+1}</td>\r\n                                        <td>{formatDateTime(data.openTime)}</td>\r\n                                        <td>{formatDateTime(data.closeTime)}</td>\r\n                                        <td colSpan={2}>\r\n                                                  <button type=\"button\" className=\"btn btn-danger mr-2\" onClick={(e)=>handleDelButton(e,data.id)}>Delete</button>\r\n                                                  <button type=\"button\" className=\"btn btn-primary\" onClick={(e)=>handleModifyButton(e, data.id)}>Modify</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n          </div>\r\n            {show==1&&<FormModal setShow={setShow} handleSubmit={handleSubmit} title=\"THÊM ĐỢT ĐĂNG KÍ\"><RegPeriodForm regPeriodDTO={regPeriodDTO}  setRegPeriodDTO={setRegPeriodDTO} semesters={semesters}/></FormModal>}\r\n          </>\r\n          )\r\n}\r\nexport default OpeningRegPeriod;","D:\\DKHP_demo\\dkhp_frontend\\src\\AdminPage\\SubjectPage.js",["235","236","237","238","239","240","241","242"],[],"import { useContext, useEffect, useState } from \"react\";\r\nimport SubjectForm from \"../AdminComponent/SubjectForm\";\r\nimport { addSubject, getAllSubjects, removeSubject } from \"../API/SubjectAPI\";\r\nimport { AdminContext } from \"../Router/AdminRouter\";\r\nimport { FormModal } from \"../AdminComponent/ModalAndAlert\";\r\nimport TableHeader from \"../Component/TableHeader\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nconst SubjectPage=()=>{\r\n          const {setError}=useContext(AdminContext);\r\n          const [subjectData, setSubjectData]=useState([]);\r\n          const[show, setShow]=useState(0); //0: ko show, 1:show\r\n          const [searchTerm, setSearchTerm]=useState(\"\");\r\n          const [search, setSearch]=useState(\"\");\r\n          const { enqueueSnackbar } = useSnackbar();\r\n          const config = {variant: '',anchorOrigin:{ horizontal: 'center' , vertical: 'bottom'}}\r\n          const newSubject={\r\n                    subjectId:\"\",\r\n                    subjectName:\"\",\r\n                    theoryCreditNumber:0,\r\n                    practiceCreditNumber:0,\r\n                    prerequisiteSubjectIds:\"\",\r\n                    aheadSubjectIds:\"\"\r\n          }\r\n          useEffect(()=>{\r\n                    getAllSubjects().then(res=>{\r\n                              setSubjectData(res.data);\r\n                    })\r\n          },[])\r\n            const handleAddButton=(e)=>{\r\n                    e.preventDefault();\r\n                    setShow(1);\r\n          }\r\n          const handleDelButton=(e,id)=>{\r\n                    e.preventDefault();\r\n                    removeSubject(id).then(res=>{\r\n                            setSubjectData((preSubjectData)=>{\r\n                                return preSubjectData.filter((data)=>data.id!=id)\r\n                            })\r\n                            config.variant=\"success\";\r\n                            enqueueSnackbar(\"Xóa thành công môn \"+res.data, config);\r\n                    })\r\n                    .catch(err=>setError(err))\r\n          }\r\n          function addRelations(subjectDTO,subjectIds, type){\r\n                subjectIds.replace(\" \",\"\").split(\",\").forEach((value)=>{\r\n                    if(value&&value.length!=0) \r\n                        subjectDTO.relations.push({\r\n                            subjectId: value,\r\n                            type: type\r\n                    })\r\n                })\r\n          }\r\n          const handleSubmit=()=>{\r\n                const subjectDTO={\r\n                    subjectId: newSubject.subjectId,\r\n                    subjectName: newSubject.subjectName,\r\n                    theoryCreditNumber: newSubject.theoryCreditNumber,\r\n                    practiceCreditNumber: newSubject.practiceCreditNumber\r\n                }\r\n                subjectDTO.relations=[];\r\n                addRelations(subjectDTO, newSubject.prerequisiteSubjectIds,1);\r\n                addRelations(subjectDTO, newSubject.aheadSubjectIds,2);\r\n                addSubject(subjectDTO).then(res=>{\r\n                    setSubjectData((prevSubjectData)=>{\r\n                        const updatedSubjectData=[...prevSubjectData];\r\n                        updatedSubjectData.push(res.data);\r\n                        return updatedSubjectData;\r\n                    })\r\n                    config.variant=\"success\";\r\n                    enqueueSnackbar(\"Thêm thành công môn \"+res.data.subjectId, config);\r\n                    setShow(0);\r\n                })\r\n                .catch(err=>{\r\n                    if(err.response.status==400){\r\n                        config.variant=\"error\";\r\n                        enqueueSnackbar(err.response.data, config);\r\n                    }\r\n                    else setError(err)\r\n                })\r\n        }\r\n        const handleFilter = (item) => {\r\n            const re = new RegExp(\"^\"+search,\"i\");\r\n            return item.subjectId.match(re);\r\n        }\r\n        const filterSubjects=(search===\"\")?subjectData:subjectData.filter(handleFilter);\r\n          return(\r\n                    <>\r\n                    <div className=\"main-page\">\r\n                              <div className=\"ContentAlignment\">\r\n                                        <h1>Danh sách các môn học</h1>\r\n                                        <button  type=\"button\" className=\"btn btn-success\" onClick={(e)=>handleAddButton(e)}>Add Subject</button>\r\n                                        <form className=\"d-flex col-lg-6\" role=\"search\" onSubmit={(e)=>{e.preventDefault(); setSearch(searchTerm);}}>\r\n                                                  <input className=\"form-control me-2\" type=\"search\" placeholder=\"Tìm kiếm theo mã lớp\" id=\"Search\" onChange={(e)=>setSearchTerm(e.target.value)}/>\r\n                                                  <button className=\"btn btn-outline-success\" type=\"submit\" >Search</button>\r\n                                        </form>\r\n                              </div>\r\n                              <div className=\"TableWapper border-bottom border-dark\">\r\n                                  <table className=\"table table-hover\">\r\n                                      <TableHeader data={[\"Mã Môn\",\"Tên Môn\",\"Số TCTH\",\"Số TCLT\",\"Mã MH tiên quyết\",\"Mã MH học trước\",\"Action\"]} />\r\n                                      <tbody>\r\n                                  {filterSubjects?.map((data)=> {\r\n                                          return (\r\n                                              <tr key={data.id}>\r\n                                                  <th>{data.subjectId}</th>\r\n                                                  <td>{data.subjectName}</td>\r\n                                                  <td>{data.theoryCreditNumber}</td>\r\n                                                  <td>{data.practiceCreditNumber}</td>\r\n                                                  <td>{data.relations&&data.relations.map((rs)=>{\r\n                                                           if(rs.type==1) return(<div>{rs.subjectId}</div>)\r\n                                                  })}</td>\r\n                                                  <td>{data.relations&&data.relations.map((rs)=>{\r\n                                                           if(rs.type==2) return(<div>{rs.subjectId}</div>)\r\n                                                  })}</td>\r\n                                                  <td colSpan={2}>\r\n                                                            <button type=\"button\" className=\"btn btn-danger mr-2\" onClick={(e)=>handleDelButton(e,data.id)}>Delete</button>\r\n                                                            <button type=\"button\" className=\"btn btn-primary\">Modify</button>\r\n                                                  </td>\r\n                                              </tr>\r\n                                          )\r\n                                      })}\r\n                                      </tbody>\r\n                                  </table>\r\n                              </div>\r\n                    </div>\r\n                      {show==1&&<FormModal setShow={setShow} handleSubmit={handleSubmit} title=\"THÊM MÔN HỌC\"><SubjectForm newSubject={newSubject}/></FormModal>}\r\n                    </>\r\n          )\r\n}\r\nexport default SubjectPage;","D:\\DKHP_demo\\dkhp_frontend\\src\\AdminPage\\SemesterPage.js",["243","244","245","246"],[],"import { useSnackbar } from \"notistack\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { AdminContext } from \"../Router/AdminRouter\";\r\nimport { addSemester, getAllSemesters, removeSemester } from \"../API/AminAPI\";\r\nimport SemesterForm from \"../AdminComponent/SemesterForm\";\r\nimport TableHeader from \"../Component/TableHeader\";\r\nimport { FormModal } from \"../AdminComponent/ModalAndAlert\";\r\n\r\nconst SemesterPage=()=>{\r\n          const {setError}=useContext(AdminContext);\r\n          const [seData, setSeData]=useState([]);\r\n          const[show, setShow]=useState(0); //0: ko show, 1:show\r\n          const { enqueueSnackbar } = useSnackbar();\r\n          const config = {variant: '',anchorOrigin:{ horizontal: 'center' , vertical: 'bottom'}}\r\n          const semesterDTO={\r\n                    semesterNum:0,\r\n                    year:0\r\n          }\r\n          useEffect(()=>{\r\n                    getAllSemesters().then(res=>{\r\n                              setSeData(res.data)\r\n                    })\r\n                    .catch((err)=>setError(err))\r\n          },[])\r\n          const handleAddButton=(e)=>{\r\n                    e.preventDefault();\r\n                    setShow(1);\r\n          }\r\n          const handleSubmit=()=>{\r\n                    console.log(semesterDTO)\r\n                    addSemester(semesterDTO.semesterNum, semesterDTO.year).then(res=>{\r\n                              setSeData((prevData)=>{\r\n                                        const updatedData=[...prevData];\r\n                                        updatedData.push(res.data);\r\n                                        return updatedData;\r\n                              })\r\n                              config.variant=\"success\";\r\n                              enqueueSnackbar(\"Thêm thành công học kì  mới\", config);\r\n                              setShow(0);\r\n                    })\r\n                    .catch(err=>{\r\n                              if(err.response.status==400){\r\n                                        config.variant=\"error\";\r\n                                        enqueueSnackbar(err.response.data, config);\r\n                              }\r\n                              else setError(err)\r\n                    })\r\n          }\r\n          const handleDelButton=(e,id)=>{\r\n                    e.preventDefault();\r\n                    removeSemester(id).then(res=>{\r\n                              setSeData((preData)=>{\r\n                                        return preData.filter((data)=>data.id!=id)\r\n                              })\r\n                              config.variant=\"success\";\r\n                              enqueueSnackbar(\"Xóa thành công học kì \", config);\r\n                    })\r\n                    .catch(err=>setError(err))\r\n          }\r\n          return(\r\n          <>\r\n                    <div className=\"main-page\">\r\n                              <div className=\"ContentAlignment\">\r\n                                        <h1>Danh sách các học kì</h1>\r\n                                        <button  type=\"button\" className=\"btn btn-success\" onClick={(e)=>handleAddButton(e)}>Thêm kì mới</button>\r\n                              </div>\r\n                              <div className=\"TableWapper border-bottom border-dark\">\r\n                                  <table className=\"table table-hover\">\r\n                                      <TableHeader data={[\"STT\",\"Học kì\",\"Năm học\",\"Action\"]} />\r\n                                      <tbody>\r\n                                  {seData?.map((data, index)=> {\r\n                                          return (\r\n                                              <tr key={index}>\r\n                                                  <th>{index+1}</th>\r\n                                                  <td>Kì {data.semesterNum}</td>\r\n                                                  <td>Năm học {data.year}-{data.year+1}</td>\r\n                                                  <td colSpan={2}>\r\n                                                            <button type=\"button\" className=\"btn btn-danger mr-2\" onClick={(e)=>handleDelButton(e,data.id)}>Delete</button>\r\n                                                  </td>\r\n                                              </tr>\r\n                                          )\r\n                                      })}\r\n                                      </tbody>\r\n                                  </table>\r\n                              </div>\r\n                    </div>\r\n                      {show==1&&<FormModal setShow={setShow} handleSubmit={handleSubmit} title=\"THÊM HỌC KÌ\"><SemesterForm semesterDTO={semesterDTO}/></FormModal>}\r\n          </>\r\n          )\r\n}\r\nexport default SemesterPage;","D:\\DKHP_demo\\dkhp_frontend\\src\\AdminPage\\CoursePage.js",["247","248","249","250","251","252","253","254","255"],[],"import { useContext, useEffect, useState } from \"react\";\r\nimport { addCourse, getAllCourses, removeCourse } from \"../API/CourseAPI\";\r\nimport { getLatestSemesters } from \"../API/AminAPI\";\r\nimport CourseForm from \"../AdminComponent/CourseForm\";\r\nimport { Alert, Button, Modal } from \"react-bootstrap\";\r\nimport { AdminContext } from \"../Router/AdminRouter\";\r\nimport TableHeader from \"../Component/TableHeader\";\r\nimport { formatDate } from \"../Util/FormatDateTime\";\r\nimport { FormModal, ResultAlert } from \"../AdminComponent/ModalAndAlert\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nconst CoursePage=()=>{\r\n          const {setError}=useContext(AdminContext);\r\n          const [courseData, setCourseData]=useState([]);\r\n          const[show, setShow]=useState(0); //0: not show, 1: show FormModal\r\n          const [searchTerm, setSearchTerm]=useState(\"\");\r\n          const [search, setSearch]=useState(\"\");\r\n          const [semesters, setSemesters]=useState([]);\r\n          const { enqueueSnackbar } = useSnackbar();\r\n          const config = {variant: '',anchorOrigin:{ horizontal: 'center' , vertical: 'bottom'}}\r\n          const courseDTO= {\r\n                courseId: \"\",\r\n                beginDate: null,\r\n                endDate: null,\r\n                language: \"VN\",\r\n                beginShift: 1,\r\n                endShift: 1,\r\n                dayOfWeek: 2,\r\n                totalNumber: 0,\r\n                weekDistance: 1,\r\n                room: \"\",\r\n                lecturerName: \"\",\r\n                mainCourseId: null,\r\n                semesterId: 0\r\n          };\r\n          useEffect(()=>{\r\n            getAllCourses().then(res=>{\r\n                setCourseData(res.data);\r\n            })\r\n            .catch(err=>setError(err))\r\n            getLatestSemesters().then(res=>{\r\n                setSemesters(res.data)\r\n            })\r\n            .catch(err=>setError(err))\r\n          },[])\r\n          const handleAddButton=(e)=>{\r\n                e.preventDefault();\r\n                setShow(1);\r\n            }\r\n            const handleDelButton=(e,id)=>{\r\n                    e.preventDefault();\r\n                    removeCourse(id).then(res=>{\r\n                        setCourseData((prevCourseData)=>{\r\n                            const updatedCourseData=prevCourseData.filter((data)=>{return data.id!=id});\r\n                            return updatedCourseData;\r\n                        })\r\n                        setShow(0);\r\n                        config.variant=\"success\"\r\n                        enqueueSnackbar(\"Xóa thành công lớp \"+res.data, config)\r\n                    })\r\n                    .catch(err=>setError(err))\r\n                }\r\n          const handleFilter = (item) => {\r\n                const re = new RegExp(\"^\"+search,\"i\");\r\n                return item.courseId.match(re);\r\n        }\r\n        const handleSubmit=()=>{\r\n            addCourse(courseDTO).then(res=>{\r\n                setCourseData((prevCourseData)=>{\r\n                    const updatedCourseData=[...prevCourseData];\r\n                    updatedCourseData.push(res.data);\r\n                    return updatedCourseData;\r\n                })\r\n                setShow(0);\r\n                config.variant=\"success\"\r\n                enqueueSnackbar(\"Thêm thành công lớp \"+res.data.courseId, config)\r\n            })\r\n            .catch(err=>{\r\n                if(err.response.status==400){\r\n                    config.variant=\"error\";\r\n                    enqueueSnackbar(err.response.data, config);\r\n                }\r\n                else setError(err)\r\n            })\r\n        }\r\n          let filterCourses=(search===\"\")?courseData:courseData.filter(handleFilter);\r\n          return(\r\n          <>\r\n          <div className=\"main-page\">\r\n                    <div className=\"ContentAlignment\">\r\n                              <h1>Danh sách các lớp đã mở</h1>\r\n                              <button  type=\"button\" className=\"btn btn-success\" onClick={(e)=>handleAddButton(e)}>Add Course</button>\r\n                              <form className=\"d-flex col-lg-6\" role=\"search\" onSubmit={(e)=>{e.preventDefault(); setSearch(searchTerm);}}>\r\n                                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Tìm kiếm theo mã lớp\" id=\"Search\" onChange={(e)=>setSearchTerm(e.target.value)}/>\r\n                                        <button className=\"btn btn-outline-success\" type=\"submit\" >Search</button>\r\n                              </form>\r\n                    </div>\r\n                    <div className=\"TableWapper border-bottom border-dark\">\r\n                        <table className=\"table table-hover\">\r\n                            <TableHeader data={[\"Mã Lớp\",\"Môn học\",\"SốTC\",\"Thời gian học\",\"ĐãDK/Sĩ số\",\"Action\"]} />\r\n                            <tbody>\r\n                        {filterCourses?.map((data)=> {\r\n                                return (\r\n                                    <tr key={data.id}>\r\n                                        <th>{data.courseId}</th>\r\n                                        <td>{data.subject.subjectName}</td>\r\n                                        <td>{data.subject.theoryCreditNumber}</td>\r\n                                        <td>Thứ {data.dayOfWeek}, tiết {data.beginShift}-{data.endShift}, giảng viên: {data.lecturerName==undefined?'Chưa có':data.lecturerName}, \r\n                                        ngôn ngữ: {data.language}, cách tuần: {data.weekDistance}, từ {formatDate(data.beginDate)} đến {formatDate(data.endDate)}</td>\r\n                                        <td>{data.registeredNumber}/{data.totalNumber}</td>\r\n                                        <td colSpan={2}>\r\n                                                  <button type=\"button\" className=\"btn btn-danger mr-2\" onClick={(e)=>handleDelButton(e,data.id)}>Delete</button>\r\n                                                  <button type=\"button\" className=\"btn btn-primary\">Modify</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n          </div>\r\n            {show==1&&<FormModal setShow={setShow} handleSubmit={handleSubmit} title=\"THÊM HỌC PHẦN\"><CourseForm courseDTO={courseDTO} semesters={semesters}/></FormModal>}\r\n          </>\r\n          )\r\n}\r\nexport default CoursePage;","D:\\DKHP_demo\\dkhp_frontend\\src\\AdminPage\\WelcomePage.js",[],[],"D:\\DKHP_demo\\dkhp_frontend\\src\\AdminPage\\StudentPage.js",["256","257","258","259","260"],[],"import { useContext, useEffect, useState } from \"react\";\r\nimport { addStudent, getAllStudents, removeStudent } from \"../API/StudentAPI\";\r\nimport { AdminContext } from \"../Router/AdminRouter\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport StudentForm from \"../AdminComponent/StudentForm.js\";\r\nimport TableHeader from \"../Component/TableHeader\";\r\nimport { FormModal } from \"../AdminComponent/ModalAndAlert\";\r\nimport { removeSemester } from \"../API/AminAPI.js\";\r\n\r\nconst StudentPage=()=>{\r\n          const {setError}=useContext(AdminContext);\r\n          const [studentData, setStudentData]=useState([]);\r\n          const[show, setShow]=useState(0); //0: ko show, 1:show\r\n          const [searchTerm, setSearchTerm]=useState(\"\");\r\n          const [search, setSearch]=useState(\"\");\r\n          const { enqueueSnackbar } = useSnackbar();\r\n          const config = {variant: '',anchorOrigin:{ horizontal: 'center' , vertical: 'bottom'}}\r\n          const studentDTO= {\r\n                    id:0,\r\n                    falcutyName: \"\",\r\n                    program: \"\",\r\n                    khoaTuyen: 0,\r\n                    user: {\r\n                        email: \"\",\r\n                        userId: \"\",\r\n                        name: \"\",\r\n                        password:\"\"\r\n                    }\r\n                }\r\n          useEffect(()=>{\r\n                    getAllStudents().then(res=>{\r\n                              setStudentData(res.data)\r\n                    })\r\n                    .catch((err)=>setError(err))\r\n          },[])\r\n          const handleAddButton=(e)=>{\r\n                    e.preventDefault();\r\n                    setShow(1);\r\n          }\r\n          const handleSubmit=()=>{\r\n                    addStudent(studentDTO).then(res=>{\r\n                              setStudentData((prevStudentData)=>{\r\n                                        const updatedSubjectData=[...prevStudentData];\r\n                                        updatedSubjectData.push(res.data);\r\n                                        return updatedSubjectData;\r\n                              })\r\n                              config.variant=\"success\";\r\n                              enqueueSnackbar(\"Thêm thành công sinh viên \"+res.data.user.userId, config);\r\n                              setShow(0);\r\n                    })\r\n                    .catch(err=>{\r\n                              if(err.response.status==400){\r\n                                        config.variant=\"error\";\r\n                                        enqueueSnackbar(err.response.data, config);\r\n                              }\r\n                              else setError(err)\r\n                    })\r\n          }\r\n          const handleDelButton=(e,id)=>{\r\n                    e.preventDefault();\r\n                    removeSemester(id).then(res=>{\r\n                              setStudentData((preStudentData)=>{\r\n                                        return preStudentData.filter((data)=>data.id!=id)\r\n                              })\r\n                              config.variant=\"success\";\r\n                              enqueueSnackbar(\"Xóa thành công sinh viên \", config);\r\n                    })\r\n                    .catch(err=>setError(err))\r\n          }\r\n          const handleFilter = (item) => {\r\n                    const re = new RegExp(\"^\"+search,\"i\");\r\n                    return item.user.userId.match(re);\r\n          }\r\n          const filterSubjects=(search===\"\")?studentData:studentData.filter(handleFilter);\r\n          return(\r\n                    <>\r\n                    <div className=\"main-page\">\r\n                              <div className=\"ContentAlignment\">\r\n                                        <h1>Danh sách các sinh viên</h1>\r\n                                        <button  type=\"button\" className=\"btn btn-success\" onClick={(e)=>handleAddButton(e)}>Add Student</button>\r\n                                        <form className=\"d-flex col-lg-6\" role=\"search\" onSubmit={(e)=>{e.preventDefault(); setSearch(searchTerm);}}>\r\n                                                  <input className=\"form-control me-2\" type=\"search\" placeholder=\"Tìm kiếm theo mã số sinh viên\" id=\"Search\" onChange={(e)=>setSearchTerm(e.target.value)}/>\r\n                                                  <button className=\"btn btn-outline-success\" type=\"submit\" >Search</button>\r\n                                        </form>\r\n                              </div>\r\n                              <div className=\"TableWapper border-bottom border-dark\">\r\n                                  <table className=\"table table-hover\">\r\n                                      <TableHeader data={[\"MSSV\",\"Họ Tên\",\"Khoa\",\"Ngành\",\"Khóa\",\"Email\",\"Action\"]} />\r\n                                      <tbody>\r\n                                  {filterSubjects?.map((data)=> {\r\n                                          return (\r\n                                              <tr key={data.id}>\r\n                                                  <th>{data.user.userId}</th>\r\n                                                  <td>{data.user.name}</td>\r\n                                                  <td>{data.falcutyName}</td>\r\n                                                  <td>{data.program}</td>\r\n                                                  <td>{data.khoaTuyen}</td>\r\n                                                  <td>{data.user.email}</td>\r\n                                                  <td colSpan={2}>\r\n                                                            <button type=\"button\" className=\"btn btn-danger mr-2\" onClick={(e)=>handleDelButton(e,data.id)}>Delete</button>\r\n                                                            <button type=\"button\" className=\"btn btn-primary\">Modify</button>\r\n                                                  </td>\r\n                                              </tr>\r\n                                          )\r\n                                      })}\r\n                                      </tbody>\r\n                                  </table>\r\n                              </div>\r\n                    </div>\r\n                      {show==1&&<FormModal setShow={setShow} handleSubmit={handleSubmit} title=\"THÊM SINH VIÊN\"><StudentForm studentDTO={studentDTO}/></FormModal>}\r\n                    </>\r\n          )\r\n}\r\nexport default StudentPage;","D:\\DKHP_demo\\dkhp_frontend\\src\\API\\CourseAPI.js",[],[],"D:\\DKHP_demo\\dkhp_frontend\\src\\Util\\Constraint.js",[],[],"D:\\DKHP_demo\\dkhp_frontend\\src\\AdminComponent\\AdminNavbar.js",["261","262","263"],[],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nconst AdminNavBar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light h6\">\r\n            <Link className=\"navbar-brand\" to=\"/admin/\">Course Registration App</Link>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item active\">\r\n                        <Link className=\"nav-link\" to=\"/admin/CoursePage\">All Courses</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/SubjectPage\">All Subjects</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/StudentPage\">All Students</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/OpeningRegPeriod\">OpeningRegPeriod</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/SemesterPage\">All Semesters</Link>\r\n                    </li>\r\n                    <li  className=\"nav-item\">\r\n                      <Link className=\"nav-link\" to=\"/login\" onClick={()=>{localStorage.removeItem(\"Authorization\")}}>Logout</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default AdminNavBar;","D:\\DKHP_demo\\dkhp_frontend\\src\\Util\\AxiosService.js",["264","265"],[],"import Axios from \"axios\";\r\n\r\nclass AxiosService {\r\n    \r\n    constructor() {\r\n        const instance = Axios.create();\r\n        instance.interceptors.response.use(this.handleSucess, this.handleError)\r\n        this.instance = instance;\r\n    }\r\n\r\n    handleSucess(res) {\r\n        return res;\r\n    }\r\n    handleError(e) {\r\n        return Promise.reject(e);\r\n    }\r\n\r\n    get(url) {\r\n        return this.instance.get(url, { headers: { 'Authorization': localStorage.getItem(\"Authorization\") } });\r\n    }\r\n    post(url, body, isJSON) {\r\n        if(body==undefined) body=null;\r\n        console.log(\"body\",body);\r\n        const headers={'Authorization': localStorage.getItem(\"Authorization\")};\r\n        if(isJSON) headers['Content-Type']=\"application/json\"\r\n        return this.instance.post(url, body, { 'headers': headers})\r\n    }\r\n\r\n    put(url, body) {\r\n        return this.instance.put(url, body, { 'headers': { \r\n            'Authorization': localStorage.getItem(\"Authorization\"),\r\n            'Content-Type': 'application/json' } })\r\n    }\r\n\r\n    delete(url) {\r\n        return this.instance.delete(url, { 'headers': { 'Authorization': localStorage.getItem(\"Authorization\") } })\r\n    }\r\n}\r\n\r\nexport default new AxiosService();","D:\\DKHP_demo\\dkhp_frontend\\src\\Util\\FormatDateTime.js",[],[],"D:\\DKHP_demo\\dkhp_frontend\\src\\Component\\CourseTable.js",["266"],[],"import React, { useContext } from \"react\"; \r\nimport TableHeader from \"./TableHeader\";\r\nimport { formatDate } from \"../Util/FormatDateTime.js\";\r\nimport { ClientContext } from \"../Router/ClientRouter.js\";\r\nconst CourseTable=({filterCourses,checkedIds,setCheckedIds})=>{\r\n            const {regNumbers}=useContext(ClientContext);\r\n            const handleCheckbox=(e,id)=>{\r\n                    setCheckedIds(prevIds=>{\r\n                        var updateIds=new Set([...prevIds]);\r\n                        if(e.target.checked) updateIds.add(id);\r\n                        else updateIds.delete(id);\r\n                        return updateIds;\r\n                    });\r\n            }\r\n        return (\r\n                    <div className=\"TableWapper border-bottom border-dark\">\r\n                        <table className=\"table table-hover\">\r\n                            <TableHeader data={[\"Chọn\",\"Mã Lớp\",\"Môn học\",\"SốTC\",\"Thời gian học\",\"ĐãDK/Sĩ số\"]} />\r\n                            <tbody>\r\n                        {filterCourses?.map((data)=> {\r\n                                return (\r\n                                    <tr key={data.id}>\r\n                                        <th scope=\"row\"><input type=\"checkbox\" className=\"form-check-input\" onChange={(e)=>handleCheckbox(e,data.id)} checked={checkedIds.has(data.id)}/></th>\r\n                                        <td>{data.courseId}</td>\r\n                                        <td>{data.subject.subjectName}</td>\r\n                                        <td>{data.subject.theoryCreditNumber}</td>\r\n                                        <td>Thứ {data.dayOfWeek}, tiết {data.beginShift}-{data.endShift}, giảng viên: {data.lecturerName==undefined?'Chưa có':data.lecturerName}, \r\n                                        ngôn ngữ: {data.language}, cách tuần: {data.weekDistance}, từ {formatDate(data.beginDate)} đến {formatDate(data.endDate)}</td>\r\n                                        <td>{regNumbers.get(data.id+\"\")}/{data.totalNumber}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                );\r\n}\r\nexport default CourseTable;","D:\\DKHP_demo\\dkhp_frontend\\src\\Component\\Modal.js",["267","268"],[],"import React from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nexport  const OpenedCourses_ResultModal=React.memo(({modal, handleClose})=>{\r\n          const successCourses=new Set();\r\n          const failedCourses=new Map();\r\n          modal.data.forEach((value,key)=>{\r\n                    if(value===\"Enroll successfully\") successCourses.add(key)\r\n                    else failedCourses.set(key,value);\r\n          })\r\n        return (\r\n          <Modal show={modal.show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>KẾT QUẢ ĐĂNG KÍ</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <h6><i className=\"bi bi-check-circle\"></i> {successCourses.size} lớp thành công</h6>\r\n                {Array.from(successCourses).map((value, index) => (\r\n                      <div key={index}>{value}: đăng kí thành công</div>\r\n                  ))}\r\n                 <h6><i className=\"bi bi-x-circle\"></i> {failedCourses.size} lớp bị lỗi</h6>\r\n                {Array.from(failedCourses.entries()).map(([key, value]) => (\r\n                      <div key={key}>{key}: {value}</div>\r\n                  ))}\r\n            </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"danger\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      )})\r\n export const RegisteredCourses_AlertModal=React.memo(({modal, courseData, checkedIds, sendRequest,handleClose})=>{\r\n          const DeletedCourseNames=[]\r\n          for(let c of courseData){\r\n                    if(checkedIds.has(c.id)) DeletedCourseNames.push(c.courseId)\r\n          }\r\n          return(\r\n          <Modal show={modal.show==1} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                              <Modal.Title>Hủy học phần</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Bạn có chắc muốn hủy đăng kí các học phần: {DeletedCourseNames.map(name=>name+\", \")}\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                              <Button variant=\"warning\" onClick={handleClose}>\r\n                              Cancel\r\n                              </Button>\r\n                              <Button variant=\"danger\" onClick={sendRequest}>\r\n                                        Delete\r\n                              </Button>\r\n                    </Modal.Footer>\r\n          </Modal>\r\n          )\r\n})\r\nexport const RegisteredCourses_ResultModal=React.memo(({modal, handleClose})=>{\r\n          const successCourses=new Set();\r\n          const failedCourses=new Map();\r\n          modal.data.forEach((value,key)=>{\r\n                    if(value===\"Unenroll successfully\") successCourses.add(key)\r\n                    else failedCourses.set(key,value);\r\n          })\r\n          return(\r\n          <Modal show={modal.show==2} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                              <Modal.Title>KẾT QUẢ HỦY ĐĂNG KÍ</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                              <h6><i className=\"bi bi-check-circle\"></i> {successCourses.size} lớp hủy thành công</h6>\r\n                              {Array.from(successCourses).map((value, index) => (\r\n                              <div key={index}>{value}: hủy thành công</div>\r\n                              ))}\r\n                              <h6><i className=\"bi bi-x-circle\"></i> {failedCourses.size} lớp hủy bị lỗi</h6>\r\n                              {Array.from(failedCourses.entries()).map(([key, value]) => (\r\n                              <div key={key}>{key}: {value}</div>\r\n                              ))}\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={handleClose}>\r\n                              Close\r\n                    </Button>\r\n                    </Modal.Footer>\r\n          </Modal>\r\n          )\r\n})","D:\\DKHP_demo\\dkhp_frontend\\src\\API\\StudentAPI.js",[],[],"D:\\DKHP_demo\\dkhp_frontend\\src\\API\\AminAPI.js",[],[],"D:\\DKHP_demo\\dkhp_frontend\\src\\AdminComponent\\StudentForm.js",[],[],"D:\\DKHP_demo\\dkhp_frontend\\src\\AdminComponent\\ModalAndAlert.js",[],[],"D:\\DKHP_demo\\dkhp_frontend\\src\\Component\\TableHeader.js",[],[],"D:\\DKHP_demo\\dkhp_frontend\\src\\API\\SubjectAPI.js",[],[],"D:\\DKHP_demo\\dkhp_frontend\\src\\AdminComponent\\SubjectForm.js",[],[],"D:\\DKHP_demo\\dkhp_frontend\\src\\AdminComponent\\CourseForm.js",["269","270","271","272"],[],"import { useEffect } from \"react\";\r\nimport { Col, Form, Modal, Row } from \"react-bootstrap\"\r\n\r\nconst CourseForm=({courseDTO, semesters})=>{\r\n          const shifts=[];\r\n          useEffect(()=>{\r\n                if(semesters.length!=0) courseDTO[\"semesterId\"]=semesters[0].id;\r\n          },[])\r\n          for(let i=1;i<=10;i++) shifts.push(i);\r\n        const handleOnChange=(e,fieldName)=>{\r\n                courseDTO[fieldName]=e.target.value;\r\n        }\r\n        return (\r\n          <Form>\r\n                    <Row className=\"mb-3\">\r\n                              <Form.Group as={Col} sm={5} controlId=\"courseId\">\r\n                                        <Form.Label>Mã học phần</Form.Label>\r\n                                        <Form.Control type=\"text\" onChange={(e)=>handleOnChange(e,\"courseId\")}/>\r\n                              </Form.Group>\r\n                              <Form.Group as={Col} sm={7} controlId=\"semesterId\">\r\n                                        <Form.Label>Học kì</Form.Label>\r\n                                        <Form.Select onChange={(e)=>handleOnChange(e,\"semesterId\")}>\r\n                                                  {semesters.map((se)=>(<option value={se.id}>Kì {se.semesterNum}, năm {se.year}-{se.year+1}</option>))}\r\n                                        </Form.Select>\r\n                              </Form.Group>\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                                <Form.Group as={Col} sm={9} controlId=\"mainCourseId\">\r\n                                        <Form.Label>Mã học HP lý thuyết (nếu là HP thực hành)</Form.Label>\r\n                                        <Form.Control type=\"text\" onChange={(e)=>handleOnChange(e,\"mainCourseId\")}/>\r\n                                </Form.Group>\r\n                                 <Form.Group as={Col} controlId=\"totalNumber\">\r\n                                        <Form.Label>Sĩ số</Form.Label>\r\n                                        <Form.Control type=\"text\" onChange={(e)=>handleOnChange(e,\"totalNumber\")}/>\r\n                                </Form.Group>\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                              <Form.Group as={Col} controlId=\"language\">\r\n                                        <Form.Label>Ngôn ngữ</Form.Label>\r\n                                        <Form.Select onChange={(e)=>handleOnChange(e,\"language\")}>\r\n                                                  <option value=\"VN\">VN</option>\r\n                                                  <option value=\"EN\">EN</option>\r\n                                        </Form.Select>\r\n                              </Form.Group>\r\n                              <Form.Group as={Col} controlId=\"lectureName\">\r\n                                        <Form.Label>Tên giảng viên</Form.Label>\r\n                                        <Form.Control type=\"text\" onChange={(e)=>handleOnChange(e,\"lectureName\")}/>\r\n                              </Form.Group>\r\n                              <Form.Group as={Col} controlId=\"room\">\r\n                                        <Form.Label>Phòng học</Form.Label>\r\n                                        <Form.Control type=\"text\" onChange={(e)=>handleOnChange(e,\"room\")}/>\r\n                              </Form.Group>\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                              <Form.Group as={Col} controlId=\"beginDate\">\r\n                                        <Form.Label>Ngày BD</Form.Label>\r\n                                        <Form.Control type=\"date\" onChange={(e)=>handleOnChange(e,\"beginDate\")}/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"endDate\">\r\n                                        <Form.Label>Ngày KT</Form.Label>\r\n                                        <Form.Control type=\"date\" onChange={(e)=>handleOnChange(e,\"endDate\")}/>\r\n                                </Form.Group>\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                                <Form.Group as={Col} controlId=\"dayOfWeek\">\r\n                                        <Form.Label>Ngày học</Form.Label>\r\n                                        <Form.Select onChange={(e)=>handleOnChange(e,\"dayOfWeek\")}>\r\n                                                {shifts.map((i)=>{\r\n                                                        if(i>=2&&i<=7) return(<option value={i}>Thứ {i}</option>)\r\n                                                })}\r\n                                        </Form.Select>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"beginShift\">\r\n                                        <Form.Label>Tiết BD</Form.Label>\r\n                                        <Form.Select onChange={(e)=>handleOnChange(e,\"beginShift\")}>\r\n                                                  {shifts.map((i)=>(<option value={i}>{i}</option>))}\r\n                                        </Form.Select>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"endShift\">\r\n                                        <Form.Label>Tiết KT</Form.Label>\r\n                                        <Form.Select onChange={(e)=>handleOnChange(e,\"endShift\")}>\r\n                                                  {shifts.map((i)=>(<option value={i}>{i}</option>))}\r\n                                        </Form.Select>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"weekDistance\">\r\n                                        <Form.Label>Cách tuần</Form.Label>\r\n                                        <Form.Select onChange={(e)=>handleOnChange(e,\"weekDistance\")}>\r\n                                                  <option value={1}>1</option>\r\n                                                  <option value={2}>2</option>\r\n                                        </Form.Select>\r\n                                </Form.Group>\r\n                    </Row>\r\n          </Form>\r\n          );\r\n}\r\nexport default CourseForm;","D:\\DKHP_demo\\dkhp_frontend\\src\\AdminComponent\\RegPeriodForm.js",["273","274","275","276","277"],[],"import { useEffect, useRef } from \"react\"\r\nimport { Col, Form, InputGroup, Row } from \"react-bootstrap\";\r\nimport { getDate, getTime } from \"../Util/FormatDateTime\";\r\n\r\nconst RegPeriodForm=({regPeriodDTO,setRegPeriodDTO, semesters})=>{\r\n          const openDateRef = useRef();\r\n          const openTimeRef = useRef();\r\n          const closeDateRef = useRef();\r\n          const closeTimeRef = useRef();\r\n\r\n          useEffect(()=>{\r\n                    if(semesters.length!=0) regPeriodDTO.semester.id=semesters[0].id;\r\n          },[])\r\n          function handleOnChange(e, fieldName){\r\n                    if(fieldName==\"semester\") setRegPeriodDTO(preDTO=>{\r\n                              const updatedRegDTO={...preDTO}\r\n                              updatedRegDTO.semester.id=e.target.value;\r\n                              return updatedRegDTO;\r\n                    })\r\n                    else if(fieldName==\"openTime\") setRegPeriodDTO((preDTO)=>{\r\n                              return {...preDTO, openTime:openDateRef.current.value+\" \"+openTimeRef.current.value}})\r\n                    else if(fieldName==\"closeTime\")setRegPeriodDTO((preDTO)=>{\r\n                              return {...preDTO, closeTime:closeDateRef.current.value+\" \"+closeTimeRef.current.value}})\r\n          }\r\n          return(\r\n                    <Form>\r\n                              <Row>\r\n                                        <InputGroup className=\"mb-3\">\r\n                                                  <InputGroup.Text>OpenTime</InputGroup.Text>\r\n                                                  <Form.Control type=\"date\" ref={openDateRef} onChange={(e)=>handleOnChange(e,\"openTime\")} defaultValue={getDate(regPeriodDTO.openTime)}/>\r\n                                                  <Form.Control type=\"time\" step=\"1\" ref={openTimeRef} onChange={(e)=>handleOnChange(e,\"openTime\")} defaultValue={getTime(regPeriodDTO.openTime)}/>\r\n                                        </InputGroup>\r\n                              </Row>\r\n                              <Row>\r\n                                        <InputGroup className=\"mb-3\">\r\n                                                  <InputGroup.Text>CloseTime</InputGroup.Text>\r\n                                                  <Form.Control type=\"date\" ref={closeDateRef} onChange={(e)=>handleOnChange(e,\"closeTime\")} defaultValue={getDate(regPeriodDTO.closeTime)}/>\r\n                                                  <Form.Control type=\"time\" step=\"1\" ref={closeTimeRef} onChange={(e)=>handleOnChange(e,\"closeTime\")} defaultValue={getTime(regPeriodDTO.closeTime)}/>\r\n                                        </InputGroup>\r\n                              </Row>\r\n                              <Row>\r\n                                        <Form.Group as={Col} sm={7} controlId=\"semester\">\r\n                                                  <Form.Label>Học kì</Form.Label>\r\n                                                  <Form.Select onChange={(e)=>handleOnChange(e,\"semester\")}>\r\n                                                  {semesters.map((se)=>(<option value={se.id}>Kì {se.semesterNum}, năm {se.year}-{se.year+1}</option>))}\r\n                                                  </Form.Select>\r\n                                        </Form.Group>\r\n                              </Row>\r\n                    </Form>\r\n          )\r\n}\r\nexport default RegPeriodForm;","D:\\DKHP_demo\\dkhp_frontend\\src\\AdminComponent\\SemesterForm.js",[],[],{"ruleId":"278","severity":1,"message":"279","line":8,"column":10,"nodeType":"280","messageId":"281","endLine":8,"endColumn":22},{"ruleId":"278","severity":1,"message":"282","line":1,"column":25,"nodeType":"280","messageId":"281","endLine":1,"endColumn":36},{"ruleId":"283","severity":1,"message":"284","line":43,"column":40,"nodeType":"285","messageId":"286","endLine":43,"endColumn":42},{"ruleId":"287","severity":1,"message":"288","line":47,"column":8,"nodeType":"289","endLine":47,"endColumn":15,"suggestions":"290"},{"ruleId":"283","severity":1,"message":"284","line":49,"column":31,"nodeType":"285","messageId":"286","endLine":49,"endColumn":33},{"ruleId":"287","severity":1,"message":"291","line":50,"column":8,"nodeType":"289","endLine":50,"endColumn":10,"suggestions":"292"},{"ruleId":"283","severity":1,"message":"284","line":26,"column":45,"nodeType":"285","messageId":"286","endLine":26,"endColumn":47},{"ruleId":"287","severity":1,"message":"288","line":30,"column":13,"nodeType":"289","endLine":30,"endColumn":20,"suggestions":"293"},{"ruleId":"283","severity":1,"message":"284","line":30,"column":45,"nodeType":"285","messageId":"286","endLine":30,"endColumn":47},{"ruleId":"283","severity":1,"message":"284","line":37,"column":52,"nodeType":"285","messageId":"286","endLine":37,"endColumn":54},{"ruleId":"283","severity":1,"message":"284","line":40,"column":50,"nodeType":"285","messageId":"286","endLine":40,"endColumn":52},{"ruleId":"283","severity":1,"message":"284","line":47,"column":30,"nodeType":"285","messageId":"286","endLine":47,"endColumn":32},{"ruleId":"283","severity":1,"message":"284","line":50,"column":30,"nodeType":"285","messageId":"286","endLine":50,"endColumn":32},{"ruleId":"283","severity":1,"message":"284","line":57,"column":53,"nodeType":"285","messageId":"286","endLine":57,"endColumn":55},{"ruleId":"283","severity":1,"message":"284","line":63,"column":53,"nodeType":"285","messageId":"286","endLine":63,"endColumn":55},{"ruleId":"278","severity":1,"message":"294","line":2,"column":10,"nodeType":"280","messageId":"281","endLine":2,"endColumn":14},{"ruleId":"278","severity":1,"message":"295","line":1,"column":38,"nodeType":"280","messageId":"281","endLine":1,"endColumn":44},{"ruleId":"278","severity":1,"message":"296","line":1,"column":58,"nodeType":"280","messageId":"281","endLine":1,"endColumn":65},{"ruleId":"297","severity":1,"message":"298","line":46,"column":12,"nodeType":"299","messageId":"300","endLine":46,"endColumn":80},{"ruleId":"287","severity":1,"message":"301","line":19,"column":12,"nodeType":"289","endLine":19,"endColumn":14,"suggestions":"302"},{"ruleId":"303","severity":1,"message":"304","line":52,"column":82,"nodeType":"305","messageId":"306","endLine":52,"endColumn":84},{"ruleId":"278","severity":1,"message":"307","line":1,"column":17,"nodeType":"280","messageId":"281","endLine":1,"endColumn":27},{"ruleId":"278","severity":1,"message":"308","line":1,"column":29,"nodeType":"280","messageId":"281","endLine":1,"endColumn":38},{"ruleId":"278","severity":1,"message":"309","line":2,"column":10,"nodeType":"280","messageId":"281","endLine":2,"endColumn":15},{"ruleId":"278","severity":1,"message":"310","line":2,"column":17,"nodeType":"280","messageId":"281","endLine":2,"endColumn":23},{"ruleId":"278","severity":1,"message":"311","line":2,"column":25,"nodeType":"280","messageId":"281","endLine":2,"endColumn":30},{"ruleId":"283","severity":1,"message":"284","line":20,"column":43,"nodeType":"285","messageId":"286","endLine":20,"endColumn":45},{"ruleId":"287","severity":1,"message":"301","line":41,"column":21,"nodeType":"289","endLine":41,"endColumn":23,"suggestions":"312"},{"ruleId":"283","severity":1,"message":"313","line":55,"column":32,"nodeType":"285","messageId":"286","endLine":55,"endColumn":34},{"ruleId":"283","severity":1,"message":"284","line":56,"column":38,"nodeType":"285","messageId":"286","endLine":56,"endColumn":40},{"ruleId":"297","severity":1,"message":"314","line":56,"column":42,"nodeType":"299","messageId":"300","endLine":56,"endColumn":187},{"ruleId":"297","severity":1,"message":"315","line":57,"column":34,"nodeType":"299","messageId":"300","endLine":57,"endColumn":106},{"ruleId":"287","severity":1,"message":"301","line":13,"column":7,"nodeType":"289","endLine":13,"endColumn":9,"suggestions":"316"},{"ruleId":"287","severity":1,"message":"301","line":34,"column":13,"nodeType":"289","endLine":34,"endColumn":15,"suggestions":"317"},{"ruleId":"283","severity":1,"message":"284","line":36,"column":39,"nodeType":"285","messageId":"286","endLine":36,"endColumn":41},{"ruleId":"283","severity":1,"message":"313","line":81,"column":69,"nodeType":"285","messageId":"286","endLine":81,"endColumn":71},{"ruleId":"283","severity":1,"message":"284","line":90,"column":31,"nodeType":"285","messageId":"286","endLine":90,"endColumn":33},{"ruleId":"283","severity":1,"message":"284","line":124,"column":18,"nodeType":"285","messageId":"286","endLine":124,"endColumn":20},{"ruleId":"283","severity":1,"message":"313","line":38,"column":77,"nodeType":"285","messageId":"286","endLine":38,"endColumn":79},{"ruleId":"283","severity":1,"message":"313","line":47,"column":43,"nodeType":"285","messageId":"286","endLine":47,"endColumn":45},{"ruleId":"283","severity":1,"message":"284","line":75,"column":43,"nodeType":"285","messageId":"286","endLine":75,"endColumn":45},{"ruleId":"303","severity":1,"message":"304","line":109,"column":95,"nodeType":"305","messageId":"306","endLine":109,"endColumn":97},{"ruleId":"283","severity":1,"message":"284","line":110,"column":70,"nodeType":"285","messageId":"286","endLine":110,"endColumn":72},{"ruleId":"303","severity":1,"message":"304","line":112,"column":95,"nodeType":"305","messageId":"306","endLine":112,"endColumn":97},{"ruleId":"283","severity":1,"message":"284","line":113,"column":70,"nodeType":"285","messageId":"286","endLine":113,"endColumn":72},{"ruleId":"283","severity":1,"message":"284","line":126,"column":28,"nodeType":"285","messageId":"286","endLine":126,"endColumn":30},{"ruleId":"287","severity":1,"message":"301","line":24,"column":13,"nodeType":"289","endLine":24,"endColumn":15,"suggestions":"318"},{"ruleId":"283","severity":1,"message":"284","line":42,"column":53,"nodeType":"285","messageId":"286","endLine":42,"endColumn":55},{"ruleId":"283","severity":1,"message":"313","line":53,"column":78,"nodeType":"285","messageId":"286","endLine":53,"endColumn":80},{"ruleId":"283","severity":1,"message":"284","line":87,"column":28,"nodeType":"285","messageId":"286","endLine":87,"endColumn":30},{"ruleId":"278","severity":1,"message":"309","line":5,"column":10,"nodeType":"280","messageId":"281","endLine":5,"endColumn":15},{"ruleId":"278","severity":1,"message":"310","line":5,"column":17,"nodeType":"280","messageId":"281","endLine":5,"endColumn":23},{"ruleId":"278","severity":1,"message":"311","line":5,"column":25,"nodeType":"280","messageId":"281","endLine":5,"endColumn":30},{"ruleId":"278","severity":1,"message":"319","line":9,"column":21,"nodeType":"280","messageId":"281","endLine":9,"endColumn":32},{"ruleId":"287","severity":1,"message":"301","line":45,"column":13,"nodeType":"289","endLine":45,"endColumn":15,"suggestions":"320"},{"ruleId":"283","severity":1,"message":"313","line":54,"column":98,"nodeType":"285","messageId":"286","endLine":54,"endColumn":100},{"ruleId":"283","severity":1,"message":"284","line":79,"column":39,"nodeType":"285","messageId":"286","endLine":79,"endColumn":41},{"ruleId":"283","severity":1,"message":"284","line":108,"column":137,"nodeType":"285","messageId":"286","endLine":108,"endColumn":139},{"ruleId":"283","severity":1,"message":"284","line":122,"column":18,"nodeType":"285","messageId":"286","endLine":122,"endColumn":20},{"ruleId":"278","severity":1,"message":"321","line":2,"column":38,"nodeType":"280","messageId":"281","endLine":2,"endColumn":51},{"ruleId":"287","severity":1,"message":"301","line":35,"column":13,"nodeType":"289","endLine":35,"endColumn":15,"suggestions":"322"},{"ruleId":"283","severity":1,"message":"284","line":52,"column":53,"nodeType":"285","messageId":"286","endLine":52,"endColumn":55},{"ruleId":"283","severity":1,"message":"313","line":63,"column":85,"nodeType":"285","messageId":"286","endLine":63,"endColumn":87},{"ruleId":"283","severity":1,"message":"284","line":110,"column":28,"nodeType":"285","messageId":"286","endLine":110,"endColumn":30},{"ruleId":"278","severity":1,"message":"307","line":1,"column":17,"nodeType":"280","messageId":"281","endLine":1,"endColumn":27},{"ruleId":"278","severity":1,"message":"308","line":1,"column":29,"nodeType":"280","messageId":"281","endLine":1,"endColumn":38},{"ruleId":"278","severity":1,"message":"323","line":1,"column":40,"nodeType":"280","messageId":"281","endLine":1,"endColumn":48},{"ruleId":"283","severity":1,"message":"284","line":22,"column":16,"nodeType":"285","messageId":"286","endLine":22,"endColumn":18},{"ruleId":"324","severity":1,"message":"325","line":40,"column":1,"nodeType":"326","endLine":40,"endColumn":35},{"ruleId":"283","severity":1,"message":"284","line":27,"column":137,"nodeType":"285","messageId":"286","endLine":27,"endColumn":139},{"ruleId":"283","severity":1,"message":"284","line":38,"column":34,"nodeType":"285","messageId":"286","endLine":38,"endColumn":36},{"ruleId":"283","severity":1,"message":"284","line":63,"column":34,"nodeType":"285","messageId":"286","endLine":63,"endColumn":36},{"ruleId":"278","severity":1,"message":"311","line":2,"column":21,"nodeType":"280","messageId":"281","endLine":2,"endColumn":26},{"ruleId":"283","severity":1,"message":"313","line":7,"column":36,"nodeType":"285","messageId":"286","endLine":7,"endColumn":38},{"ruleId":"287","severity":1,"message":"327","line":8,"column":13,"nodeType":"289","endLine":8,"endColumn":15,"suggestions":"328"},{"ruleId":"303","severity":1,"message":"304","line":68,"column":64,"nodeType":"305","messageId":"306","endLine":68,"endColumn":66},{"ruleId":"283","severity":1,"message":"313","line":12,"column":40,"nodeType":"285","messageId":"286","endLine":12,"endColumn":42},{"ruleId":"287","severity":1,"message":"329","line":13,"column":13,"nodeType":"289","endLine":13,"endColumn":15,"suggestions":"330"},{"ruleId":"283","severity":1,"message":"284","line":15,"column":33,"nodeType":"285","messageId":"286","endLine":15,"endColumn":35},{"ruleId":"283","severity":1,"message":"284","line":20,"column":38,"nodeType":"285","messageId":"286","endLine":20,"endColumn":40},{"ruleId":"283","severity":1,"message":"284","line":22,"column":38,"nodeType":"285","messageId":"286","endLine":22,"endColumn":40},"no-unused-vars","'API_ENDPOINT' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'anchorOrigin', 'enqueueSnackbar', and 'logOut'. Either include them or remove the dependency array.","ArrayExpression",["331"],"React Hook useEffect has a missing dependency: 'courseData.length'. Either include it or remove the dependency array.",["332"],["333"],"'Link' is defined but never used.","'useRef' is defined but never used.","'useMemo' is defined but never used.","react/jsx-pascal-case","Imported JSX component OpenedCourses_ResultModal must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","React Hook useEffect has a missing dependency: 'setError'. Either include it or remove the dependency array.",["334"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useContext' is defined but never used.","'useEffect' is defined but never used.","'Alert' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.",["335"],"Expected '!==' and instead saw '!='.","Imported JSX component RegisteredCourses_AlertModal must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component RegisteredCourses_ResultModal must be in PascalCase or SCREAMING_SNAKE_CASE",["336"],["337"],["338"],"'ResultAlert' is defined but never used.",["339"],"'removeStudent' is defined but never used.",["340"],"'useState' is defined but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'courseDTO' and 'semesters'. Either include them or remove the dependency array.",["341"],"React Hook useEffect has missing dependencies: 'regPeriodDTO.semester' and 'semesters'. Either include them or remove the dependency array.",["342"],{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"343","fix":"347"},{"desc":"348","fix":"349"},{"desc":"348","fix":"350"},{"desc":"348","fix":"351"},{"desc":"348","fix":"352"},{"desc":"348","fix":"353"},{"desc":"348","fix":"354"},{"desc":"348","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},"Update the dependencies array to be: [anchorOrigin, enqueueSnackbar, error, logOut]",{"range":"360","text":"361"},"Update the dependencies array to be: [courseData.length]",{"range":"362","text":"363"},{"range":"364","text":"361"},"Update the dependencies array to be: [setError]",{"range":"365","text":"366"},{"range":"367","text":"366"},{"range":"368","text":"366"},{"range":"369","text":"366"},{"range":"370","text":"366"},{"range":"371","text":"366"},{"range":"372","text":"366"},"Update the dependencies array to be: [courseDTO, semesters]",{"range":"373","text":"374"},"Update the dependencies array to be: [regPeriodDTO.semester, semesters]",{"range":"375","text":"376"},[1964,1971],"[anchorOrigin, enqueueSnackbar, error, logOut]",[2057,2059],"[courseData.length]",[1389,1396],[930,932],"[setError]",[2245,2247],[503,505],[1535,1537],[1084,1086],[1900,1902],[1534,1536],[290,292],"[courseDTO, semesters]",[530,532],"[regPeriodDTO.semester, semesters]"]