{"ast":null,"code":"var _jsxFileName = \"D:\\\\DKHP_demo\\\\dkhp_frontend\\\\src\\\\Router\\\\ProtectedRouter.js\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isExpiredToken = token => {\n  const decodedToken = jwtDecode(token);\n  const now = new Date();\n  return decodedToken.exp * 1000 < now.getTime();\n};\nconst ProtectedRouter = ({\n  requiredRole,\n  children\n}) => {\n  const token = localStorage.getItem('Authorization');\n  const role = localStorage.getItem('Role');\n  if (token && !isExpiredToken(token) && role && role === requiredRole) return children;else {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      replace: true,\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 20\n    }, this);\n  }\n};\n_c = ProtectedRouter;\nexport default ProtectedRouter;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRouter\");","map":{"version":3,"names":["jwtDecode","Navigate","jsxDEV","_jsxDEV","isExpiredToken","token","decodedToken","now","Date","exp","getTime","ProtectedRouter","requiredRole","children","localStorage","getItem","role","replace","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/DKHP_demo/dkhp_frontend/src/Router/ProtectedRouter.js"],"sourcesContent":["import { jwtDecode } from \"jwt-decode\";\r\nimport { Navigate } from \"react-router-dom\";\r\nconst isExpiredToken=(token)=>{\r\n        const decodedToken = jwtDecode(token);\r\n        const now=new Date();\r\n        return (decodedToken.exp * 1000 < now.getTime());\r\n}\r\nconst ProtectedRouter=({requiredRole, children})=>{\r\n        const token=localStorage.getItem('Authorization');\r\n        const role=localStorage.getItem('Role');\r\n        if(token&&!isExpiredToken(token)&&role&&role===requiredRole) return children;\r\n        else{\r\n            return(<Navigate replace to=\"/login\" />)\r\n        }\r\n}\r\nexport default ProtectedRouter;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5C,MAAMC,cAAc,GAAEC,KAAK,IAAG;EACtB,MAAMC,YAAY,GAAGN,SAAS,CAACK,KAAK,CAAC;EACrC,MAAME,GAAG,GAAC,IAAIC,IAAI,CAAC,CAAC;EACpB,OAAQF,YAAY,CAACG,GAAG,GAAG,IAAI,GAAGF,GAAG,CAACG,OAAO,CAAC,CAAC;AACvD,CAAC;AACD,MAAMC,eAAe,GAACA,CAAC;EAACC,YAAY;EAAEC;AAAQ,CAAC,KAAG;EAC1C,MAAMR,KAAK,GAACS,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;EACjD,MAAMC,IAAI,GAACF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACvC,IAAGV,KAAK,IAAE,CAACD,cAAc,CAACC,KAAK,CAAC,IAAEW,IAAI,IAAEA,IAAI,KAAGJ,YAAY,EAAE,OAAOC,QAAQ,CAAC,KACzE;IACA,oBAAOV,OAAA,CAACF,QAAQ;MAACgB,OAAO;MAACC,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3C;AACR,CAAC;AAAAC,EAAA,GAPKZ,eAAe;AAQrB,eAAeA,eAAe;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}