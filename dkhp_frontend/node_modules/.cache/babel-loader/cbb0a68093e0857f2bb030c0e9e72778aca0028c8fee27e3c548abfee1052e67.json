{"ast":null,"code":"var _jsxFileName = \"D:\\\\DKHP_demo\\\\dkhp_frontend\\\\src\\\\Router\\\\ClientRouter.js\",\n  _s = $RefreshSig$();\nimport { Route, Routes, useLocation, useNavigate } from \"react-router-dom\";\nimport OpenedCoursesPage from \"../Page/OpenedCoursesPage\";\nimport ErrorPage from \"../Page/ErrorPage\";\nimport NavBar from \"../Component/Navbar\";\nimport RegisteredCoursesPage from \"../Page/RegisteredCoursesPage\";\nimport DashboardPage from \"../Page/DashboardPage\";\nimport { createContext, useEffect, useState } from \"react\";\nimport { getOpenedCourses, getUpdatedRegNumbers } from \"../API/CourseAPI\";\nimport TimeTablePage from \"../Page/TimeTablePage\";\nimport { useSnackbar } from \"notistack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ClientContext = /*#__PURE__*/createContext();\nfunction ClientRouter() {\n  _s();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const navigate = useNavigate();\n  const [courseData, setCourseData] = useState([]);\n  const [regNumbers, setRegNumbers] = useState(new Map());\n  const [error, setError] = useState(null);\n  let anchorOrigin = {\n    horizontal: 'center',\n    vertical: 'bottom'\n  };\n  useEffect(() => {\n    const updatedRegNumbers = new Map();\n    for (let c of courseData) updatedRegNumbers.set(c.id + \"\", c.registeredNumber);\n    setRegNumbers(updatedRegNumbers);\n  }, [courseData]);\n  async function loadCourseData() {\n    getOpenedCourses().then(res => {\n      setCourseData(res.data);\n      setError(null);\n    }).catch(err => setError(err));\n  }\n  function logOut() {\n    localStorage.removeItem(\"Authorization\");\n    localStorage.removeItem(\"Role\");\n    navigate(\"/login\");\n  }\n  useEffect(() => {\n    let sseClient = getUpdatedRegNumbers(setRegNumbers);\n    return () => sseClient.close();\n  }, []);\n  useEffect(() => {\n    if (error != null) {\n      if (error.response.status == 401) logOut();\n      let config = {\n        variant: 'error',\n        anchorOrigin: anchorOrigin\n      };\n      enqueueSnackbar(error.response.data, config);\n    }\n  }, [error]);\n  useEffect(() => {\n    if (courseData.length == 0) loadCourseData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ClientContext.Provider, {\n    value: {\n      courseData,\n      regNumbers,\n      setError\n    },\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(DashboardPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/OpenedCourses\",\n        element: /*#__PURE__*/_jsxDEV(OpenedCoursesPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/RegisteredCourses\",\n        element: /*#__PURE__*/_jsxDEV(RegisteredCoursesPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/TimeTable\",\n        element: /*#__PURE__*/_jsxDEV(TimeTablePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        element: /*#__PURE__*/_jsxDEV(ErrorPage, {\n          message: \"404 Error! Page Not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 1\n  }, this);\n}\n_s(ClientRouter, \"NcgLtl/XYjbgUF1y8W4ZYkrXo1k=\", false, function () {\n  return [useSnackbar, useNavigate];\n});\n_c = ClientRouter;\nexport default ClientRouter;\nvar _c;\n$RefreshReg$(_c, \"ClientRouter\");","map":{"version":3,"names":["Route","Routes","useLocation","useNavigate","OpenedCoursesPage","ErrorPage","NavBar","RegisteredCoursesPage","DashboardPage","createContext","useEffect","useState","getOpenedCourses","getUpdatedRegNumbers","TimeTablePage","useSnackbar","jsxDEV","_jsxDEV","ClientContext","ClientRouter","_s","enqueueSnackbar","navigate","courseData","setCourseData","regNumbers","setRegNumbers","Map","error","setError","anchorOrigin","horizontal","vertical","updatedRegNumbers","c","set","id","registeredNumber","loadCourseData","then","res","data","catch","err","logOut","localStorage","removeItem","sseClient","close","response","status","config","variant","length","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","element","message","_c","$RefreshReg$"],"sources":["D:/DKHP_demo/dkhp_frontend/src/Router/ClientRouter.js"],"sourcesContent":["import { Route, Routes, useLocation, useNavigate } from \"react-router-dom\";\r\nimport OpenedCoursesPage from \"../Page/OpenedCoursesPage\";\r\nimport ErrorPage from \"../Page/ErrorPage\";\r\nimport NavBar from \"../Component/Navbar\";\r\nimport RegisteredCoursesPage from \"../Page/RegisteredCoursesPage\";\r\nimport DashboardPage from \"../Page/DashboardPage\";\r\nimport { createContext, useEffect, useState } from \"react\";\r\nimport { getOpenedCourses, getUpdatedRegNumbers } from \"../API/CourseAPI\";\r\nimport TimeTablePage from \"../Page/TimeTablePage\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nexport const ClientContext= createContext();\r\nfunction ClientRouter(){\r\n     const { enqueueSnackbar } = useSnackbar();\r\n     const navigate = useNavigate();\r\n     const [courseData, setCourseData]=useState([]);\r\n     const [regNumbers, setRegNumbers]=useState(new Map());\r\n     const[error, setError]=useState(null);\r\n     let anchorOrigin = { horizontal: 'center' , vertical: 'bottom'}\r\n     useEffect(()=>{\r\n          const updatedRegNumbers=new Map();\r\n          for(let c of courseData) updatedRegNumbers.set(c.id+\"\", c.registeredNumber);\r\n          setRegNumbers(updatedRegNumbers);\r\n     }, [courseData])\r\n     async function loadCourseData(){\r\n          getOpenedCourses().then(res=>{\r\n               setCourseData(res.data);\r\n               setError(null);\r\n          })\r\n          .catch(err=>setError(err))\r\n     }\r\n     function logOut(){\r\n          localStorage.removeItem(\"Authorization\");\r\n          localStorage.removeItem(\"Role\");\r\n          navigate(\"/login\");\r\n     }\r\n     useEffect(()=>{\r\n          let sseClient=getUpdatedRegNumbers(setRegNumbers);\r\n          return ()=>sseClient.close();\r\n     },[])\r\n     useEffect(()=>{\r\n          if(error!=null){\r\n               if(error.response.status==401) logOut();\r\n               let config = {variant: 'error',anchorOrigin:anchorOrigin}\r\n               enqueueSnackbar(error.response.data,config);\r\n          }\r\n     },[error])\r\n     useEffect(()=>{\r\n          if(courseData.length==0) loadCourseData();\r\n     },[])\r\nreturn(\r\n<ClientContext.Provider value={{courseData,regNumbers, setError}}>\r\n          <NavBar/>\r\n          <Routes>\r\n                    <Route exact path=\"/\" element={<DashboardPage />}/>\r\n                    <Route path=\"/OpenedCourses\" element={<OpenedCoursesPage/>}/>\r\n                    <Route path=\"/RegisteredCourses\" element={<RegisteredCoursesPage/>}/>\r\n                    <Route path=\"/TimeTable\" element={<TimeTablePage/>}/>\r\n                    <Route path=\"/*\" element={<ErrorPage message=\"404 Error! Page Not Found\"/>}/>\r\n          </Routes>\r\n     </ClientContext.Provider>\r\n)\r\n}\r\nexport default ClientRouter;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}