version: "3.8"
services: 
  mysql-service:
    image: mysql
    container_name: mysql-service
    restart: always
    ports:
       - 3308:${DB_PORT}
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASS}
      MYSQL_PORT: ${DB_PORT}
    volumes:
      - db:/var/lib/mysql
    networks:
      - dkhp-network
  # Spring boot server connect to database
  backend-service: 
   image: hungtran679/dkhp_demo-backend-service:latest
   container_name: backend-service
   depends_on:
     - mysql-service
   restart: always
   environment:
      DB_HOST: mysql-service
      DB_PORT: ${DB_PORT}
      DB_PASS: ${DB_PASS}
      DB_DATABASE: ${DB_DATABASE}
   ports:
      - 8080:8080
   volumes:
     - ./dkhp_backend:/app/backend
   networks:
     - dkhp-network
  frontend-service:
    image: hungtran679/dkhp_demo-frontend-service:latest
    container_name: frontend-service
    restart: always
    networks:
     - dkhp-network
    ports:
      - 3001:80
    volumes:
      - ./dkhp_frontend:/app/frontend
  # prometheus exporter for mysql-service
  mysql-exporter:
    container_name: prometheus-mysql-exporter
    image: prom/mysqld-exporter
    depends_on:
      - mysql-service
    ports:
      - 9104:9104
    command:
      - "--mysqld.username=${DB_EXPORTER_USR}:${DB_EXPORTER_PASS}"
      - "--mysqld.address=mysql-service:${DB_PORT}" 
      - '--collect.info_schema.processlist'
      - '--collect.info_schema.innodb_metrics'
      - '--collect.info_schema.tablestats'
      - '--collect.info_schema.tables'
      - '--collect.info_schema.userstats'
      - '--collect.engine_innodb_status'
    links:
      - mysql-service
    networks:
      - dkhp-network
  # prometheus exporter for frontend-service
  nginx-exporter:
     container_name: prometheus-nginx-exporter
     image: nginx/nginx-prometheus-exporter
     depends_on:
       - frontend-service
     ports:
      - 9113:9113
     command:
       - -nginx.scrape-uri
       - http://frontend-service:3000/stub_status 
     networks:
        - dkhp-network
  # prometheus
  prometheus:
      user: root
      image: prom/prometheus
      hostname: localhost
      container_name: prometheus
      ports:
        - 9090:9090
      restart: always
      # Mount config file from local to container
      volumes:
        - './monitoring/prometheus:/config'
      command:
        - '--config.file=/config/prometheus.yml'
        - '--web.enable-lifecycle'
      networks:
        - dkhp-network
  alertmanager:
      # Run a container as root user
      user: root
      image: prom/alertmanager
      hostname: localhost
      container_name: alertmanager
      depends_on:
        - prometheus
      restart: always
      ports:
        - 9093:9093
      volumes: 
        - './monitoring/prometheus:/config'
      command:
         - '--config.file=/config/alertmanager.yml'
      networks:
        - dkhp-network
  grafana:
     user: root
     image: grafana/grafana
     hostname: localhost
     depends_on:
        - prometheus
     ports:
        - 3000:3000
     restart: always
     volumes:
        - './monitoring/grafana/grafana.ini:/etc/grafana/grafana.ini'
     networks:
        - dkhp-network
networks:
  dkhp-network:

volumes:
  db: